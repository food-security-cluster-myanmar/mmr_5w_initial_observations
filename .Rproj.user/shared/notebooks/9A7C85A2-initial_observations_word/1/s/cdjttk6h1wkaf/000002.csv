"0",""
"0","# indicator guide for vulmmr"
"0","indicator_guide <- read_excel(""Datasets_Vulnerability_Analysis_in_Myanmar_09Jul2018 (1).xlsx"","
"0","           skip = 1) %>% "
"0","  slice(1:3) %>% "
"0","  janitor::clean_names() %>% "
"0","  transpose_df() %>% "
"0","  rename(indicator = rowname, "
"0","         age_group = `1`,"
"0","         category = `2`, "
"0","         source = `3`) %>% "
"0","  slice(-1)"
"2","New names:
* `Conflict Index C (% of max inverse % of average of envelopes)` -> `Conflict Index C (% of max inverse % of average of envelopes)...12`
* `Highest Education: At least Middle school %` -> `Highest Education: At least Middle school %...14`
* `Electricity for Lighting %` -> `Electricity for Lighting %...15`
* `ID Card: with ID total %` -> `ID Card: with ID total %...16`
* `Urban Population %` -> `Urban Population %...27`
* ...
"
"0","# reading in vulnerability dataset"
"0","vulmmr <- read_excel(""Datasets_Vulnerability_Analysis_in_Myanmar_09Jul2018 (1).xlsx"","
"0","           skip = 1) %>% "
"0","  slice(-c(1:3)) %>% "
"0","  clean_names() %>% "
"0","  select(-label) %>% "
"0","  mutate_at(vars(number_of_village_tracts:wb_wealth_rank), as.numeric) %>% "
"0","  mutate_at(vars(disasters_impacted_by_nargis_2008:acled_2015_2016_data_exists), as.logical) %>% "
"0","  mutate_at(vars(conflict_2015_2016_number_of_battles:corrected_conflict_index_garry), as.numeric) %>% "
"0","  select(-starts_with(""x"")) %>% "
"0","  select(-c(private_sector_development_2014_2015, protection_2010_2015, shelter_2010_2015, wash_2010_2015)) "
"2","New names:
* `Conflict Index C (% of max inverse % of average of envelopes)` -> `Conflict Index C (% of max inverse % of average of envelopes)...12`
* `Highest Education: At least Middle school %` -> `Highest Education: At least Middle school %...14`
* `Electricity for Lighting %` -> `Electricity for Lighting %...15`
* `ID Card: with ID total %` -> `ID Card: with ID total %...16`
* `Urban Population %` -> `Urban Population %...27`
* ...
"
"0","# reading in townships from geoadmins "
"0","townships <- read_excel(""FSC 5W 2021 - GEOADMINS_final 19.xlsx"","
"0","           sheet = ""GEOADMINS"") %>% "
"0","  clean_names() %>% "
"0","  select(admin1pcode_4:admin3pcode) %>% "
"0","  rename(admin1_pcode = admin1pcode_4,"
"0","         admin3_pcode = admin3pcode,"
"0","         state_name   = state_5,"
"0","         township_name  = county) %>% "
"0","  remove_empty()"
"2","value for ""which"" not specified, defaulting to c(""rows"", ""cols"")
"
"2","New names:
* State -> State...1
* Admin1PCODE -> Admin1PCODE...2
* `` -> ...3
* Admin1PCODE -> Admin1PCODE...4
* State -> State...5
* ...
"
"0","# locations dataset "
"0","locations <- bind_rows("
"0","  "
"0","  read_excel(""FSC 5W 2021 - GEOADMINS_final 19.xlsx"", # payams "
"0","             sheet = ""GEOADMINS"") %>% "
"0","    clean_names() %>% "
"0","    select(state_name:payam_code) %>% "
"0","    rename(admin1_pcode = state_code_12,"
"0","           township_name = county_name, "
"0","           admin3_pcode = county_code,"
"0","           location = payam_name) %>%"
"0","    remove_empty() %>% "
"0","    mutate(location_type = paste0(""payam"")),"
"0","  "
"0","  read_excel(""FSC 5W 2021 - GEOADMINS_final 19.xlsx"", # camps"
"0","             sheet = ""GEOADMINS"") %>% "
"0","    clean_names() %>% "
"0","    select(county_name1:p_code_camp) %>% "
"0","    rename(township_name = county_name1,"
"0","           admin3_pcode = state_code_23,"
"0","           location = camps, "
"0","           camp_pcode = p_code_camp) %>% "
"0","    remove_empty() %>% "
"0","    mutate(location_type = paste0(""camp"")) %>% "
"0","    left_join(townships %>% select(state_name, admin1_pcode, admin3_pcode), "
"0","              by = c(""admin3_pcode"")) %>% "
"0","    relocate(admin1_pcode) %>% "
"0","    relocate(state_name),"
"0","  "
"0","  read_excel(""FSC 5W 2021 - GEOADMINS_final 19.xlsx"", # industrial zones"
"0","             sheet = ""GEOADMINS"") %>% "
"0","    clean_names() %>%"
"0","    select(state_28:industrial_zones) %>% "
"0","    rename(state_name = state_28, "
"0","           admin1_pcode = admin1pcode_29,"
"0","           location = industrial_zones) %>%"
"0","    remove_empty() %>% "
"0","    regex_left_join(townships %>% select(township_name, admin3_pcode),"
"0","                    by = c(""location"" = ""township_name"")) %>% "
"0","    # replacing the NAs with 0s so the filter doesn't drop them "
"0","    replace_na(list(township_name = 0, admin3_pcode = 0, admin1_pcode = 0)) %>%"
"0","    filter(admin3_pcode != ""MMR013040"") %>% # removing all the matches between Hlaingtharya and Hlaing"
"0","    filter(admin3_pcode != ""MMR011006"") %>% # removing all the matches between Yenangyaung and Ye"
"0","    mutate(location_type = paste0(""industrial_zone""))"
"0","  "
"0",")%>%"
"0","  mutate(location_code = case_when(location_type == ""camp"" ~ camp_pcode,"
"0","                                   location_type == ""payam"" ~ payam_code,"
"0","                                   location_type == ""industrial_zone"" ~ NA_character_)) %>%"
"0","  mutate(locations_fuzzy = str_replace_all(location, ""[[:punct:]]"", """"))"
"2","value for ""which"" not specified, defaulting to c(""rows"", ""cols"")
"
"2","New names:
* State -> State...1
* Admin1PCODE -> Admin1PCODE...2
* `` -> ...3
* Admin1PCODE -> Admin1PCODE...4
* State -> State...5
* ...
"
"2","value for ""which"" not specified, defaulting to c(""rows"", ""cols"")
"
"2","New names:
* State -> State...1
* Admin1PCODE -> Admin1PCODE...2
* `` -> ...3
* Admin1PCODE -> Admin1PCODE...4
* State -> State...5
* ...
"
"2","value for ""which"" not specified, defaulting to c(""rows"", ""cols"")
"
"2","New names:
* State -> State...1
* Admin1PCODE -> Admin1PCODE...2
* `` -> ...3
* Admin1PCODE -> Admin1PCODE...4
* State -> State...5
* ...
"
"0","# reading in 5ws"
"0","fsc <- read_excel("
"0","  ""FSC 5W 2021 - GEOADMINS_final19_(included All IP Reports)_Jan to Sep 2021_IM Combined_Final.xlsx"","
"0","                  sheet = ""FSC 5W Activites"","
"0","                  skip = 5) %>% "
"0","  janitor::clean_names() %>% "
"0","  select(month_of_implementation:hrp_version) %>% "
"0","  rename_all(~str_replace_all(., ""^number_of_"", """")) %>%"
"0","  rename_all(~str_replace_all(., ""^number_"", """")) %>% "
"0","  rename(admin4_pcode = admin3_pcode, "
"0","         admin3_pcode = admin2_pcode,"
"0","         beneficiaries = reached_beneficiaries,"
"0","         households = reached_households,"
"0","         beneficiary_type = beneficiaries_type) %>% "
"0","  mutate(industrial_zones = replace(industrial_zones, industrial_zones == ""No"", NA),"
"0","         frequency = replace(frequency, frequency == ""N/A"", NA)) %>% "
"0","  mutate(location = case_when(camp != ""NA"" ~ camp,"
"0","                              industrial_zones != ""NA"" ~ industrial_zones,"
"0","                              village_ward_town != ""NA"" ~ village_ward_town)) %>% "
"0","  mutate(location_type = case_when(camp != ""NA"" ~ ""camp"","
"0","                              industrial_zones != ""NA"" ~ ""industrial_zone"","
"0","                              village_ward_town != ""NA"" ~ ""village_ward_town"")) %>%"
"0","  mutate(locations_fuzzy = str_replace_all(location, ""[[:punct:]]"", "" "")) %>% "
"0","  mutate(total_value_mmk = value_per_household * households) %>% "
"0","  mutate(date = my(month_of_implementation)) %>% "
"0","  mutate(u_ben = ifelse(unique_beneficiaries == ""Yes"", beneficiaries, 0)) %>% "
"0","  mutate(state = as.character(fct_recode(state, "
"0","                            ""Kachin"" = ""kachin""))) %>% "
"0","  mutate(mmk_hhd_bin = case_when(value_per_household < 10000 ~ ""below_10k"","
"0","                             value_per_household >= 10000 & value_per_household <= 20000 ~ ""10k_20k"","
"0","                             value_per_household > 20000 & value_per_household <= 50000 ~ ""20k_50k"","
"0","                             value_per_household > 50000 & value_per_household <= 70000 ~ ""50k_70k"","
"0","                             value_per_household > 70000 & value_per_household < 100000 ~ ""70k_100k"","
"0","                             value_per_household >= 100000 & value_per_household < 200000 ~ ""100k_200k"","
"0","                             value_per_household >= 200000 & value_per_household <= 300000 ~ ""200k_300k"","
"0","                             value_per_household > 300000 ~ ""above_300k"","
"0","                             TRUE ~ NA_character_),"
"0","         mmk_hhd_bin = fct_relevel(mmk_hhd_bin, c(""less_than_10k"", ""10k_20k"",""20k_50k"", ""50k_70k"", ""70k_100k"", ""100k_200k"","
"0","                                          ""200k_300k"",""more_than_300k"")),"
"0","         frequency = recode(frequency, ""monthly"" = ""Monthly"")) %>%"
"0","  mutate(usd_hhd_bin = "
"0","           case_when(value_per_household_usd < 10 ~ ""below_$10"","
"0","                     value_per_household_usd >= 10 & value_per_household_usd < 20 ~ ""$10_$20"","
"0","                     value_per_household_usd >= 20 & value_per_household_usd < 40 ~ ""$20_$40"","
"0","                     value_per_household_usd >= 40 & value_per_household_usd < 60 ~ ""$40_$60"","
"0","                     value_per_household_usd >= 60 & value_per_household_usd < 100 ~ ""$60_$100"","
"0","                     value_per_household_usd >= 100 & value_per_household_usd < 200 ~ ""$100_$200"","
"0","                     value_per_household_usd >= 200 ~ ""above_$200"","
"0","                     TRUE ~ NA_character_),"
"0","         usd_hhd_bin = fct_relevel(usd_hhd_bin, c(""below_$10"", ""$10_$20"", ""$20_$40"", ""$40_$60"", "
"0","                                                  ""$60_$100"", ""$100_$200"", ""above_$200""))) %>% "
"0","  mutate(hrp_indicator ="
"0","          recode(hrp_indicator,"
"0","          ""Number of people who received food and/or cash assistance"" = "
"0","            ""1. Number of people who received food and/or cash assistance"","
"0","          ""Number of people who received agriculture and other livelihood support, contributing to household food security"" ="
"0","            ""2. Number of people who received agriculture and other livelihood support"")) %>% "
"0","  mutate(beneficiary_type = str_trim(beneficiary_type)) %>% "
"0","  mutate(beneficiary_type = as.character(fct_recode(beneficiary_type, "
"0","               ""Rakhine stateless"" = ""Non-displaced stateless people in Rakhine"")))"
"2","New names:
* `` -> ...64
* `` -> ...65
* `` -> ...66
* `` -> ...67
* `` -> ...68
* ...
"
"0","  "
"0",""
"0","# ben dataset -- tidy fromat 5Ws for beneficiaries "
"0","ben <- fsc %>% "
"0","  filter(unique_beneficiaries == ""Yes"") %>%  "
"0","  select(date,"
"0","         implementing_partners, implementing_partner_type,"
"0","         state, township, village_ward_town, location, location_type, admin1_pcode, admin3_pcode,"
"0","         activity, activity_status, hrp_indicator, beneficiary_type, "
"0","         child_male, child_female, adult_male, adult_female, elderly_male, elderly_female) %>% "
"0","  pivot_longer(cols = child_male:elderly_female, "
"0","               names_to = ""disaggregation"", values_to = ""beneficiaries"", values_drop_na = TRUE)"
"0"," "
"0",""
"0","# reading in pin and targets"
"0","pin <- read_excel(""PIN calculation Food Security Cluster_Township Breakdown.xlsx"","
"0","           sheet = ""Food Sec PiN with IDPs"", "
"0","           skip = 2) %>% "
"0","  clean_names() %>% "
"0","  select(-c(x17, x18, x19)) %>% "
"0","  slice(1:346) %>% "
"0","  fill(region) %>% "
"0","  rename(state = region,"
"0","         idps = id_ps, "
"0","         pop_minus_idps = population_minus_id_ps, "
"0","         total_pin = vulnerable_food_insecure_people_id_ps) %>%  "
"0","  filter(township != ""Total"") %>%  "
"0","  mutate_at(vars(pop_minus_idps:moderately_severely), ~ as.numeric(.)) %>% "
"0","  left_join(townships, by = c(""township"" = ""township_name"")) %>% "
"0","  replace(is.na(.), 0)  %>% "
"0","  select(-state) %>%  "
"0","  relocate(admin3_pcode) %>% relocate(state = state_name) %>% relocate(admin1_pcode) %>% "
"0","  mutate(pc_vul = total_pin / total_pop,"
"0","         total_pin = round(total_pin, digits = 0))"
"2","New names:
* `` -> ...17
* `` -> ...18
* `` -> ...19
"
"0","# shapefiles"
"0","pcode3_shape <- st_read(""./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp"", quiet = TRUE) %>% "
"0","  rename(state = ST, "
"0","         admin1_pcode = ST_PCODE,"
"0","         township = TS,"
"0","         admin3_pcode = TS_PCODE)"
"0",""
"0","pcode1_shape <- st_read(""./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp"", quiet = TRUE) %>% "
"0","  rename(state = ST, "
"0","         admin1_pcode = ST_PCODE)"
"0",""
"0","# for relevelling -- this is in order of beneficiaries"
"0","sr_ord <- c(""Yangon"", ""Rakhine"",""Kachin"", ""Ayeyarwady"", ""Kayin"",  "
"0","  ""Mon"", ""Mandalay"", ""Kayah"", ""Chin"", ""Sagaing"", ""Magway"", "
"0","  ""Bago"", ""Nay Pyi Taw"", ""Shan"", ""Tanintharyi"")"
