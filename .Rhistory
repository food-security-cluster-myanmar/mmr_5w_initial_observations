summarise(households = sum(households)) %>%
mutate(`%_of_households` = round(households / sum(households)* 100, digits = 2)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = usd_hhd_bin)) +
geom_col() +
geom_text(aes(label = `%_of_households`), vjust = -0.5, size = 3) +
scale_fill_viridis_d(option = "mako", direction = -1) +
scale_y_continuous(labels = comma, breaks = seq(0, 25000, by = 5000)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 30, hjust = 0.8)) +
labs(x = "USD value of cash transfer per household per month",
y = "Number of households",
title = "Number of households by value of cash transfer per household",
subtitle = "Figures at the top of each bar show percentage of households\nOnly households reached through the cash, hybrid or voucher modalities are included")
fsc %>%
filter(unique_beneficiaries == "Yes" & !is.na(usd_hhd_bin)) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
mutate(`%_of_households` = round(households / sum(households)* 100, digits = 2)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = usd_hhd_bin)) +
geom_col() +
geom_text(aes(label = `%_of_households`), vjust = -0.5, size = 3) +
scale_fill_viridis_d(option = "mako", direction = -1) +
scale_y_continuous(labels = comma, breaks = seq(0, 25000, by = 5000)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 30, hjust = 0.8, vjust = 0.2)) +
labs(x = "USD value of cash transfer per household per month",
y = "Number of households",
title = "Number of households by value of cash transfer per household",
subtitle = "Figures at the top of each bar show percentage of households\nOnly households reached through the cash, hybrid or voucher modalities are included")
fsc %>%
filter(unique_beneficiaries == "Yes" & !is.na(usd_hhd_bin)) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
mutate(`%_of_households` = round(households / sum(households)* 100, digits = 2)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = usd_hhd_bin)) +
geom_col() +
geom_text(aes(label = `%_of_households`), vjust = -0.5, size = 3) +
scale_fill_viridis_d(option = "mako", direction = -1) +
scale_y_continuous(labels = comma, breaks = seq(0, 25000, by = 5000)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 30, hjust = 0.8, vjust = 0.1)) +
labs(x = "USD value of cash transfer per household per month",
y = "Number of households",
title = "Number of households by value of cash transfer per household",
subtitle = "Figures at the top of each bar show percentage of households\nOnly households reached through the cash, hybrid or voucher modalities are included")
fsc %>%
filter(unique_beneficiaries == "Yes" & !is.na(usd_hhd_bin)) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
mutate(`%_of_households` = round(households / sum(households)* 100, digits = 2)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = usd_hhd_bin)) +
geom_col() +
geom_text(aes(label = `%_of_households`), vjust = -0.5, size = 3) +
scale_fill_viridis_d(option = "mako", direction = -1) +
scale_y_continuous(labels = comma, breaks = seq(0, 25000, by = 5000)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 30, hjust = 0.8, vjust = 1)) +
labs(x = "USD value of cash transfer per household per month",
y = "Number of households",
title = "Number of households by value of cash transfer per household",
subtitle = "Figures at the top of each bar show percentage of households\nOnly households reached through the cash, hybrid or voucher modalities are included")
fsc %>%
filter(unique_beneficiaries == "Yes" & !is.na(usd_hhd_bin)) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
mutate(`%_of_households` = round(households / sum(households)* 100, digits = 2)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = usd_hhd_bin)) +
geom_col() +
geom_text(aes(label = `%_of_households`), vjust = -0.5, size = 3) +
scale_fill_viridis_d(option = "mako", direction = -1) +
scale_y_continuous(labels = comma, breaks = seq(0, 25000, by = 5000)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 30, hjust = 0.8, vjust = 0.9)) +
labs(x = "USD value of cash transfer per household per month",
y = "Number of households",
title = "Number of households by value of cash transfer per household",
subtitle = "Figures at the top of each bar show percentage of households\nOnly households reached through the cash, hybrid or voucher modalities are included")
cash_delivery_mechanism <- fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes" & !is.na(cash_delivery_mechanism) ) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
mutate(households = round(households)) %>%
count(usd_hhd_bin,cash_delivery_mechanism, wt = households) %>%
pivot_wider(names_from = usd_hhd_bin, values_from = n) %>%
adorn_totals("col", na.rm = TRUE) %>%
rename(total_hhd = Total) %>%
mutate(pc_of_hhd = round(total_hhd / sum(total_hhd) * 100, digits = 2)) %>%
arrange(desc(total_hhd))
cash_delivery_mechanism %>%
kable(caption = "Cash transfer, hybrid and voucher values per household, by cash delivery mechanism (USD)",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped") %>%
footnote(general = "Only households which were reached by cash, hybrid or voucher modalities are included",
general_title = "")
cash_delivery_mechanism %>%
kable(caption = "Cash transfer, hybrid and voucher values per household, by cash delivery mechanism (USD)",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped", position = "left", full_width = FALSE) %>%
footnote(general = "Only households which were reached by cash, hybrid or voucher modalities are included",
general_title = "")
cash_delivery_mechanism <- fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes" & !is.na(cash_delivery_mechanism) ) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
mutate(households = round(households)) %>%
count(cash_delivery_mechanism, wt = households) %>%
pivot_wider(names_from = usd_hhd_bin, values_from = n) %>%
adorn_totals("col", na.rm = TRUE) %>%
rename(total_hhd = Total) %>%
mutate(pc_of_hhd = round(total_hhd / sum(total_hhd) * 100, digits = 2)) %>%
arrange(desc(total_hhd))
fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes" & !is.na(cash_delivery_mechanism) ) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
mutate(households = round(households)) %>%
count(cash_delivery_mechanism, wt = households)
fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes" & !is.na(cash_delivery_mechanism) ) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
mutate(households = round(households)) %>%
group_by(cash_delivery_mechanism) %>%
summarise(beneficiaries = sum(beneficiaries),
households = sum(households)) %>%
mutate(pc_of_hhd = households / sum(households),
pc_of_ben = beneficiaries / sum(beneficiaries)) %>%
arrange(desc(households))
cash_delivery_mechanism <- fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes" & !is.na(cash_delivery_mechanism) ) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
mutate(households = round(households)) %>%
group_by(cash_delivery_mechanism) %>%
summarise(beneficiaries = sum(beneficiaries),
households = sum(households)) %>%
mutate(pc_of_hhd = round(households / sum(households) * 100, digits = 2),
pc_of_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
arrange(desc(households))
cash_delivery_mechanism %>%
kable(caption = "Cash transfer, hybrid and voucher values per household, by cash delivery mechanism (USD)",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped", position = "left", full_width = FALSE) %>%
footnote(general = "Only households which were reached by cash, hybrid or voucher modalities are included",
general_title = "")
cash_delivery_mechanism <- fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes" & !is.na(cash_delivery_mechanism) ) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
mutate(households = round(households)) %>%
group_by(cash_delivery_mechanism) %>%
summarise(beneficiaries = sum(beneficiaries),
households = sum(households)) %>%
mutate(pc_of_hhd = round(households / sum(households) * 100, digits = 2),
pc_of_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
relocate(pc_of_ben, .after = beneficiaries) %>%
arrange(desc(households))
cash_delivery_mechanism %>%
kable(caption = "Cash transfer, hybrid and voucher values per household, by cash delivery mechanism (USD)",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped", position = "left", full_width = FALSE) %>%
footnote(general = "Only households which were reached by cash, hybrid or voucher modalities are included",
general_title = "")
fsc %>%
filter(!is.na(new_value_hhd)) %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(activity) %>%
summarise(mean = mean(new_value_hhd),
median = median(new_value_hhd),
sd = sd(new_value_hhd),
aad = mad(new_value_hhd)) %>%
mutate(across(c(mean, median, sd, aad), ~ round(., digits = 2))) %>%
arrange(desc(mean)) %>%
kable(caption = "Summary statistics of monetary values by activity") %>%
kable_classic_2("striped") %>%
footnote(general = "SD (standard deviation), AAD (average absolute deviation)", general_title = "")
fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes") %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(activity, usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = activity)) +
geom_col() +
scale_y_continuous(labels = comma) +
labs(x = "") +
labs(title = "Variation in the per household values of intervention packages in USD",
subtitle = "Faceted by activity; contains only data from activities using cash, hybrid or voucher modalities") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90),
plot.title = element_text(size = 12)) +
facet_wrap(~ activity, scales = "free_y")
fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes") %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(activity, usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = activity)) +
geom_col() +
scale_y_continuous(labels = comma) +
labs(x = "") +
labs(title = "Variation in the per household values of intervention packages in USD",
subtitle = "Faceted by activity; contains only data from activities using cash, hybrid or voucher modalities") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.9),
plot.title = element_text(size = 12)) +
facet_wrap(~ activity, scales = "free_y")
fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes") %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(activity, usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = activity)) +
geom_col() +
scale_y_continuous(labels = comma) +
labs(x = "") +
labs(title = "Variation in the per household values of intervention packages in USD",
subtitle = "Faceted by activity; contains only data from activities using cash, hybrid or voucher modalities") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.2),
plot.title = element_text(size = 12)) +
facet_wrap(~ activity, scales = "free_y")
fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes") %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(activity, usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = activity)) +
geom_col() +
scale_y_continuous(labels = comma) +
labs(x = "") +
labs(title = "Variation in the per household values of intervention packages in USD",
subtitle = "Faceted by activity; contains only data from activities using cash, hybrid or voucher modalities") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5),
plot.title = element_text(size = 12)) +
facet_wrap(~ activity, scales = "free_y")
fsc %>%
filter(!is.na(new_value_hhd)) %>%
filter(unique_beneficiaries == "Yes") %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(activity) %>%
summarise(mean = mean(new_value_hhd),
median = median(new_value_hhd),
sd = sd(new_value_hhd),
aad = mad(new_value_hhd)) %>%
mutate(across(c(mean, median, sd, aad), ~ round(., digits = 2))) %>%
arrange(desc(mean)) %>%
kable(caption = "Summary statistics of monetary values by activity") %>%
kable_classic_2("striped") %>%
footnote(general = "SD (standard deviation), AAD (average absolute deviation)", general_title = "")
fsc %>%
filter(!is.na(new_value_hhd)) %>%
filter(unique_beneficiaries == "Yes") %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(activity) %>%
summarise(mean = mean(new_value_hhd),
median = median(new_value_hhd),
sd = sd(new_value_hhd),
aad = mad(new_value_hhd)) %>%
mutate(across(c(mean, median, sd, aad), ~ round(., digits = 2))) %>%
arrange(desc(mean)) %>%
kable(caption = "Summary statistics of monetary values by activity;\ncontains only data from activities using cash, hybrid or voucher modalities") %>%
kable_classic_2("striped") %>%
footnote(general = "SD (standard deviation), AAD (average absolute deviation)", general_title = "")
cbt_bins <- fsc %>% filter(activity == "Provide monthly cash-based transfers" & !is.na(usd_hhd_bin)) %>%
count(usd_hhd_bin, wt = households) %>%
mutate(pc_of_total = round(n / sum(n) * 100, digits = 2))
fsc %>%
filter(unique_beneficiaries == "Yes" & activity == "Provide monthly cash-based transfers") %>%
filter(!is.na(new_value_hhd)) %>%
mutate(pc_meb = new_value_hhd / 114.55) %>%
group_by(usd_hhd_bin) %>%
summarise(avg_pc_of_meb = round(median(pc_meb) * 100, digits = 2),
avg_usd_month = round(median(new_value_hhd, na.rm = TRUE), digits = 2),
households = round(sum(households))) %>%
mutate(pc_of_hhd = round(households / sum(households) * 100, digits = 2)) %>%
kable(caption = "Monthly cash-based transfer values by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
column_spec(5, color = "white", background = spec_color(cbt_bins$pc_of_total[1:11], end = 0.8, direction = -1)) %>%
footnote(general = "Only households reached through monthly cash-based transfers are included",
general_title = "")
fsc %>%
filter(unique_beneficiaries == "Yes" & activity == "Provide monthly cash-based transfers") %>%
filter(!is.na(new_value_hhd)) %>%
mutate(pc_meb = new_value_hhd / 114.55) %>%
group_by(usd_hhd_bin) %>%
summarise(avg_pc_of_meb = round(median(pc_meb) * 100, digits = 2),
avg_usd_month = round(median(new_value_hhd, na.rm = TRUE), digits = 2),
households = round(sum(households))) %>%
mutate(pc_of_hhd = round(households / sum(households) * 100, digits = 2)) %>%
kable(caption = "Monthly cash-based transfer values by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
column_spec(4, color = "white", background = spec_color(cbt_bins$pc_of_total[1:11], end = 0.7, direction = -1)) %>%
footnote(general = "Only households reached through monthly cash-based transfers are included",
general_title = "")
fsc %>%
filter(unique_beneficiaries == "Yes" & activity == "Provide monthly cash-based transfers") %>%
filter(!is.na(new_value_hhd)) %>%
mutate(pc_meb = new_value_hhd / 114.55) %>%
group_by(usd_hhd_bin) %>%
summarise(avg_pc_of_meb = round(median(pc_meb) * 100, digits = 2),
avg_usd_month = round(median(new_value_hhd, na.rm = TRUE), digits = 2),
households = round(sum(households))) %>%
mutate(pc_of_hhd = round(households / sum(households) * 100, digits = 2)) %>%
kable(caption = "Monthly cash-based transfer values by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
column_spec(4, color = "white", background = spec_color(cbt_bins$pc_of_total[1:11], end = 0.7, direction = -1)) %>%
footnote(general = "Only households reached through monthly cash-based transfers are included",
general_title = "")
fsc %>%
filter(unique_beneficiaries == "Yes" & activity == "Provide monthly cash-based transfers") %>%
filter(!is.na(new_value_hhd)) %>%
mutate(pc_meb = new_value_hhd / 114.55) %>%
group_by(usd_hhd_bin) %>%
summarise(avg_pc_of_meb = round(median(pc_meb) * 100, digits = 2),
avg_usd_month = round(median(new_value_hhd, na.rm = TRUE), digits = 2),
households = round(sum(households))) %>%
mutate(pc_of_hhd = round(households / sum(households) * 100, digits = 2)) %>%
kable(caption = "Monthly cash-based transfer values by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
column_spec(4, color = "white", background = spec_color(cbt_bins$pc_of_total[1:11], end = 1, direction = -1)) %>%
footnote(general = "Only households reached through monthly cash-based transfers are included",
general_title = "")
fsc %>%
filter(unique_beneficiaries == "Yes" & activity == "Provide monthly cash-based transfers") %>%
filter(!is.na(new_value_hhd)) %>%
mutate(pc_meb = new_value_hhd / 114.55) %>%
group_by(usd_hhd_bin) %>%
summarise(avg_pc_of_meb = round(median(pc_meb) * 100, digits = 2),
avg_usd_month = round(median(new_value_hhd, na.rm = TRUE), digits = 2),
households = round(sum(households))) %>%
mutate(pc_of_hhd = round(households / sum(households) * 100, digits = 2)) %>%
kable(caption = "Monthly cash-based transfer values by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
column_spec(5, color = "white", background = spec_color(cbt_bins$pc_of_total[1:11], end = 1, direction = -1)) %>%
footnote(general = "Only households reached through monthly cash-based transfers are included",
general_title = "")
tribble(
~type, ~count,
"UN (including OCHA)", 3,
"INGO", 25,
"NNGO, CSO and Private sector", 41,
"Research institutes", 2,
"Total FSC partners", 71
) %>%
kable(caption = "FSC partners by type") %>%
kable_classic_2(position = "left", full_width = FALSE)
kable(tribble(
~type, ~count,
"UN (including OCHA)", 3,
"INGO", 25,
"NNGO, CSO and Private sector", 41,
"Research institutes", 2,
**"Total FSC partners"**, **71**
tribble(
~type, ~count,
"UN (including OCHA)", 3,
"INGO", 25,
"NNGO, CSO and Private sector", 41,
"Research institutes", 2,
"Total FSC partners", 71
) %>%
kable(caption = "FSC partners by type") %>%
kable_classic_2(position = "left", full_width = FALSE) %>%
row_spec(5, bold = TRUE)
fsc %>%
filter(!is.na(beneficiary_type & unique_beneficiaries == "Yes")) %>%
group_by(hrp_ierp, beneficiaries) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = beneficiary_type, values_from = beneficiaries)
fsc %>%
filter(!is.na(beneficiary_type) & unique_beneficiaries == "Yes") %>%
group_by(hrp_ierp, beneficiaries) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = beneficiary_type, values_from = beneficiaries)
fsc %>%
filter(!is.na(beneficiary_type) & unique_beneficiaries == "Yes") %>%
group_by(hrp_ierp, beneficiary_type) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = beneficiary_type, values_from = beneficiaries)
fsc %>%
filter(!is.na(beneficiary_type) & unique_beneficiaries == "Yes") %>%
group_by(hrp_ierp, beneficiary_type) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries)  %>%
adorn_totals("col")
fsc %>%
filter(!is.na(beneficiary_type) & unique_beneficiaries == "Yes") %>%
group_by(hrp_ierp, beneficiary_type) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries)  %>%
adorn_totals("col") %>%
mutate(pc_of_ben = Total / sum(Total)) %>%
rename(total_beneficiaries = Total) %>%
kable(caption = "Breakdown of beneficiary types by response plan", format.args = list(big.mark = ",")) %>%
kable_classic_2()
fsc %>%
filter(!is.na(beneficiary_type) & unique_beneficiaries == "Yes") %>%
group_by(hrp_ierp, beneficiary_type) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries)  %>%
adorn_totals("col") %>%
mutate(pc_of_ben = round(Total / sum(Total) * 100, digits = 2)) %>%
rename(total_beneficiaries = Total) %>%
kable(caption = "Breakdown of beneficiary types by response plan", format.args = list(big.mark = ",")) %>%
kable_classic_2()
fsc %>%
filter(beneficiary_type == "Host/local Community" & unique_beneficiaries == "Yes") %>%
sum_ben(activity)
fsc %>%
filter(beneficiary_type == "Host/local Community" & unique_beneficiaries == "Yes") %>%
sum_ben(activity) %>%
mutate(pc = beneficiaries / sum(beneficiaries))
# reminder to check the text in the paragraph above when you rerun the report with data
pin %>%
filter(hrp_target_total > 0) %>%
select(state, admin3_pcode, hrp_target_idps_2021, hrp_target_returnees_2021, hrp_target_stateless_rakhine_2021,
hrp_target_other_vulnerable_2021, hrp_target_total) %>%
left_join(fsc %>%
filter(!is.na(beneficiary_type) & unique_beneficiaries == "Yes" & hrp_ierp != "non_hrp") %>%
group_by(admin3_pcode, beneficiary_type) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = beneficiary_type, values_from = beneficiaries) %>%
mutate(total_beneficiaries = rowSums(across(where(is.numeric)), na.rm = TRUE)), by = "admin3_pcode") %>%
clean_names() %>%
replace(is.na(.), 0) %>%
group_by(state) %>%
summarise_at(vars(hrp_target_idps_2021:total_beneficiaries), ~sum(.)) %>%
mutate(host_local_pc = host_local_community / hrp_target_other_vulnerable_2021 * 100,
idp_pc = internally_displaced / hrp_target_idps_2021 * 100,
returnees_pc = returnees / hrp_target_returnees_2021 * 100,
rakhine_stateless_pc = rakhine_stateless / hrp_target_stateless_rakhine_2021 * 100,
total_pc = total_beneficiaries / hrp_target_total * 100) %>%
select(state, host_local_pc, idp_pc, returnees_pc, rakhine_stateless_pc, total_pc) %>%
mutate_at(vars(host_local_pc, idp_pc, returnees_pc, rakhine_stateless_pc, total_pc), ~ replace(., is.nan(.), NA)) %>%
mutate_at(vars(host_local_pc, idp_pc, returnees_pc, rakhine_stateless_pc, total_pc), ~ replace(., is.infinite(.), NA)) %>%
mutate_at(vars(host_local_pc, idp_pc, returnees_pc, rakhine_stateless_pc, total_pc), ~ round(., digits = 2)) %>%
rename(`host_local%` = host_local_pc,
`idp%` = idp_pc,
`returnees%` = returnees_pc,
`rakhine_stateless%` = rakhine_stateless_pc,
`total%` = total_pc) %>%
kable(caption = "Percentage of 2021 HRP target reached by beneficiary type") %>%
kable_classic_2("striped") %>%
footnote("Only HRP/IERP beneficiaries have ben included",
general_title = "")
round(filter(gap_months, recurrences > 1 & gap_months > 0 ) %>% {sum(.$ben_max)} / filter(gap_months, recurrences > 1) %>% {sum(.$ben_max)} * 100, digits = 1)
# I feel like this is the most inefficient way to do this; still works, though
# you're going to need to rewrite this when you have Q4 data
gap_months <- fsc %>%
filter(frequency == "Monthly" & beneficiaries > 0) %>%
group_by(date, implementing_partners, activity, state, township, location) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
pivot_wider(names_from = date, values_from = beneficiaries) %>%
unnest() %>%
ungroup() %>%
mutate(recurrences = rowSums(!is.na(select(., -implementing_partners, -activity, -state, -township, -location))),
ben_max = pmax(`2021-01-01`, `2021-02-01`, `2021-03-01`, `2021-04-01`, `2021-05-01`, `2021-06-01`,
`2021-07-01`, `2021-08-01`, `2021-09-01`, `2021-10-01`, `2021-11-01`, `2021-12-01`, na.rm = TRUE)) %>%
pivot_longer(cols = c(`2021-01-01`, `2021-02-01`, `2021-03-01`, `2021-04-01`, `2021-05-01`, `2021-06-01`,
`2021-07-01`, `2021-08-01`, `2021-09-01`, `2021-10-01`, `2021-11-01`, `2021-12-01`),
names_to = "date", values_to = "beneficiaries") %>%
mutate(distribution = ifelse(is.na(beneficiaries), "n", "y")) %>%
select(-beneficiaries) %>%
pivot_wider(names_from = date, values_from = distribution) %>%
mutate(gaps = paste0(`2021-01-01`, `2021-02-01`, `2021-03-01`, `2021-04-01`, `2021-05-01`, `2021-06-01`,
`2021-07-01`, `2021-08-01`, `2021-09-01`, `2021-10-01`, `2021-11-01`, `2021-12-01`)) %>%
mutate(gap_months = case_when(str_detect(gaps, "ynnnnnnnnnnny") ~ 11,
str_detect(gaps, "ynnnnnnnnnny") ~ 10,
str_detect(gaps, "ynnnnnnnnny") ~ 9,
str_detect(gaps, "ynnnnnnnny") ~ 8,
str_detect(gaps, "ynnnnnnny") ~ 7,
str_detect(gaps, "ynnnnnny") ~ 6,
str_detect(gaps, "ynnnnny") ~ 5,
str_detect(gaps, "ynnnny") ~ 4,
str_detect(gaps, "ynnny") ~ 3,
str_detect(gaps, "ynny") ~ 2,
str_detect(gaps, "yny") ~ 1,
TRUE ~ 0))
round(filter(gap_months, recurrences > 1 & gap_months > 0 ) %>% {sum(.$ben_max)} / filter(gap_months, recurrences > 1) %>% {sum(.$ben_max)} * 100, digits = 1)
fsc %>%
filter(unique_beneficiaries == "Yes" & activity == "Provide monthly cash-based transfers") %>%
filter(!is.na(new_value_hhd)) %>%
mutate(pc_meb = new_value_hhd / 114.55) %>%
group_by(usd_hhd_bin) %>%
summarise(avg_pc_of_meb = round(median(pc_meb) * 100, digits = 2),
avg_usd_month = round(median(new_value_hhd, na.rm = TRUE), digits = 2),
households = round(sum(households))) %>%
mutate(pc_of_hhd = round(households / sum(households) * 100, digits = 2)) %>%
kable(caption = "Monthly cash-based transfer values by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
column_spec(5, color = "white", background = spec_color(cbt_bins$pc_of_total[1:11], end = 0.9, direction = -1)) %>%
footnote(general = "Only households reached through monthly cash-based transfers are included",
general_title = "")
act_num %>%
kable(caption = "Number of implementing partners by number of distinct activities being implemented",
format.args = list(big.mark = ",")
#,table.attr = "style='width:50%;'"
) %>%
kable_classic_2(position = "left", full_width = FALSE)
act_num <- fsc %>%
group_by(implementing_partners) %>%
summarise(number_of_activities = n_distinct(activity),
beneficiaries = sum(beneficiaries[unique_beneficiaries == "Yes"], na.rm = TRUE)) %>%
group_by(number_of_activities) %>%
summarise(partners = n_distinct(implementing_partners),
beneficiaries = sum(beneficiaries)) %>%
mutate(pc_of_beneficiaries = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
act_num %>%
kable(caption = "Number of implementing partners by number of distinct activities being implemented",
format.args = list(big.mark = ",")
#,table.attr = "style='width:50%;'"
) %>%
kable_classic_2(position = "left", full_width = FALSE)
