new_value_hhd >= 100 & new_value_hhd < 200 ~ ">=$100_<$200",
new_value_hhd >= 200 ~ ">=$200",
TRUE ~ NA_character_),
usd_hhd_bin2 = fct_relevel(usd_hhd_bin2, c("<$10", ">=$10_<$20", ">=$20_<$40", ">=$40_<$60",
">=$60_<$100", ">=$100_<$200", ">=$200"))) %>%
filter(unique_beneficiaries == "Yes" & !is.na(usd_hhd_bin2)) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(usd_hhd_bin2) %>%
summarise(households = sum(households)) %>%
mutate(`%_of_households` = round(households / sum(households)* 100, digits = 2)) %>%
ggplot(aes(x = usd_hhd_bin2, y = households, fill = usd_hhd_bin2)) +
geom_col() +
geom_text(aes(label = `%_of_households`), vjust = -0.5, size = 3) +
scale_fill_brewer(palette = "Greens") +
scale_y_continuous(labels = comma, breaks = seq(0, 30000, by = 5000)) +
theme(legend.position = "none") +
labs(x = "USD value of cash transfer per household",
y = "Number of households",
title = "Number of households by value of cash transfer per household",
subtitle = "Figures at the top of each bar show percentage of total households")
fsc %>%
mutate(new_value_hhd = total_value_usd / households) %>%
mutate(new_value_person = total_value_usd / beneficiaries) %>%
mutate(usd_hhd_bin2 =
case_when(new_value_hhd < 10 ~ "<$10",
new_value_hhd >= 10 & new_value_hhd < 20 ~ ">=$10_<$20",
new_value_hhd >= 20 & new_value_hhd < 40 ~ ">=$20_<$40",
new_value_hhd >= 40 & new_value_hhd < 60 ~ ">=$40_<$60",
new_value_hhd >= 60 & new_value_hhd < 80 ~ ">=$60_<$80",
new_value_hhd >= 80 & new_value_hhd < 100 ~ ">=$80_<$100",
new_value_hhd >= 100 & new_value_hhd < 200 ~ ">=$100_<$200",
new_value_hhd >= 200 ~ ">=$200",
TRUE ~ NA_character_),
usd_hhd_bin2 = fct_relevel(usd_hhd_bin2, c("<$10", ">=$10_<$20", ">=$20_<$40", ">=$40_<$60",
">=$60_<$100", ">=$100_<$200", ">=$200"))) %>%
filter(unique_beneficiaries == "Yes" & !is.na(usd_hhd_bin2)) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(usd_hhd_bin2) %>%
summarise(households = sum(households)) %>%
mutate(`%_of_households` = round(households / sum(households)* 100, digits = 2)) %>%
ggplot(aes(x = usd_hhd_bin2, y = households, fill = usd_hhd_bin2)) +
geom_col() +
geom_text(aes(label = `%_of_households`), vjust = -0.5, size = 3) +
scale_fill_brewer(palette = "Greens") +
scale_y_continuous(labels = comma, breaks = seq(0, 30000, by = 5000)) +
theme(legend.position = "none") +
labs(x = "USD value of cash transfer per household",
y = "Number of households",
title = "Number of households by value of cash transfer per household",
subtitle = "Figures at the top of each bar show percentage of total households")
fsc %>%
mutate(new_value_hhd = total_value_usd / households) %>%
mutate(new_value_person = total_value_usd / beneficiaries) %>%
mutate(usd_hhd_bin2 =
case_when(new_value_hhd < 10 ~ "<$10",
new_value_hhd >= 10 & new_value_hhd < 20 ~ ">=$10_<$20",
new_value_hhd >= 20 & new_value_hhd < 40 ~ ">=$20_<$40",
new_value_hhd >= 40 & new_value_hhd < 60 ~ ">=$40_<$60",
new_value_hhd >= 60 & new_value_hhd < 80 ~ ">=$60_<$80",
new_value_hhd >= 80 & new_value_hhd < 100 ~ ">=$80_<$100",
new_value_hhd >= 100 & new_value_hhd < 200 ~ ">=$100_<$200",
new_value_hhd >= 200 ~ ">=$200",
TRUE ~ NA_character_),
usd_hhd_bin2 = fct_relevel(usd_hhd_bin2, c("<$10", ">=$10_<$20", ">=$20_<$40", ">=$40_<$60",
">=$60_<$80", ">=$80_<$100", ">=$100_<$200", ">=$200"))) %>%
filter(unique_beneficiaries == "Yes" & !is.na(usd_hhd_bin2)) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(usd_hhd_bin2) %>%
summarise(households = sum(households)) %>%
mutate(`%_of_households` = round(households / sum(households)* 100, digits = 2)) %>%
ggplot(aes(x = usd_hhd_bin2, y = households, fill = usd_hhd_bin2)) +
geom_col() +
geom_text(aes(label = `%_of_households`), vjust = -0.5, size = 3) +
scale_fill_brewer(palette = "Greens") +
scale_y_continuous(labels = comma, breaks = seq(0, 30000, by = 5000)) +
theme(legend.position = "none") +
labs(x = "USD value of cash transfer per household",
y = "Number of households",
title = "Number of households by value of cash transfer per household",
subtitle = "Figures at the top of each bar show percentage of total households")
# reading in 5ws
fsc <- read_excel(
"FSC 5W 2021 - GEOADMINS_final 19_Jan to Dec 2021 IM Combined_Draft_28012022.xlsx",
sheet = "FSC 5W Activites",
skip = 5) %>%
janitor::clean_names() %>%
select(month_of_implementation:hrp_version) %>%
rename_all(~str_replace_all(., "^number_of_", "")) %>%
rename_all(~str_replace_all(., "^number_", "")) %>%
rename(admin4_pcode = admin3_pcode,
admin3_pcode = admin2_pcode,
beneficiaries = reached_beneficiaries,
households = reached_households,
beneficiary_type = beneficiaries_type) %>%
mutate(industrial_zones = replace(industrial_zones, industrial_zones == "No", NA),
frequency = replace(frequency, frequency == "N/A", NA)) %>%
mutate(location = case_when(camp != "NA" ~ camp,
industrial_zones != "NA" ~ industrial_zones,
village_ward_town != "NA" ~ village_ward_town)) %>%
mutate(location_type = case_when(camp != "NA" ~ "camp",
industrial_zones != "NA" ~ "industrial_zone",
village_ward_town != "NA" ~ "village_ward_town")) %>%
mutate(locations_fuzzy = str_replace_all(location, "[[:punct:]]", " ")) %>%
mutate(total_value_mmk = value_per_household * households) %>%
mutate(date = my(month_of_implementation)) %>%
mutate(u_ben = ifelse(unique_beneficiaries == "Yes", beneficiaries, 0)) %>%
mutate(state = as.character(fct_recode(state,
"Kachin" = "kachin"))) %>%
# are you even using this? if not, take it out
mutate(mmk_hhd_bin = case_when(value_per_household < 10000 ~ "below_10k",
value_per_household >= 10000 & value_per_household <= 20000 ~ "10k_20k",
value_per_household > 20000 & value_per_household <= 50000 ~ "20k_50k",
value_per_household > 50000 & value_per_household <= 70000 ~ "50k_70k",
value_per_household > 70000 & value_per_household < 100000 ~ "70k_100k",
value_per_household >= 100000 & value_per_household < 200000 ~ "100k_200k",
value_per_household >= 200000 & value_per_household <= 300000 ~ "200k_300k",
value_per_household > 300000 ~ "above_300k",
TRUE ~ NA_character_),
mmk_hhd_bin = fct_relevel(mmk_hhd_bin, c("less_than_10k", "10k_20k","20k_50k", "50k_70k", "70k_100k", "100k_200k",
"200k_300k","more_than_300k")),
frequency = recode(frequency, "monthly" = "Monthly")) %>%
mutate(new_value_hhd = total_value_usd / households,
new_value_person = total_value_usd / beneficiaries,
usd_hhd_bin =
case_when(new_value_hhd < 10 ~ "<$10",
new_value_hhd >= 10 & new_value_hhd < 20 ~ ">=$10_<$20",
new_value_hhd >= 20 & new_value_hhd < 40 ~ ">=$20_<$40",
new_value_hhd >= 40 & new_value_hhd < 60 ~ ">=$40_<$60",
new_value_hhd >= 60 & new_value_hhd < 80 ~ ">=$60_<$80",
new_value_hhd >= 80 & new_value_hhd < 100 ~ ">=$80_<$100",
new_value_hhd >= 100 & new_value_hhd < 200 ~ ">=$100_<$200",
new_value_hhd >= 200 ~ ">=$200",
TRUE ~ NA_character_),
usd_hhd_bin = fct_relevel(usd_hhd_bin, c("<$10", ">=$10_<$20", ">=$20_<$40", ">=$40_<$60",
">=$60_<$80", ">=$80_<$100", ">=$100_<$200", ">=$200"))) %>%
mutate(hrp_indicator =
recode(hrp_indicator,
"Number of people who received food and/or cash assistance" =
"1.Number of people who received food and/or cash assistance",
"Number of people who received agriculture and other livelihood support, contributing to household food security" =
"2.Number of people who received agriculture and other livelihood support")) %>%
mutate(beneficiary_type = str_trim(beneficiary_type)) %>%
mutate(beneficiary_type = as.character(fct_recode(beneficiary_type,
"Rakhine stateless" = "Non-displaced stateless people in Rakhine"))) %>%
mutate(activity = recode(activity,
"Provide monthly food baskets through in-kind assistance to acutely food insecure population in rural areas" =
"Provide monthly food baskets",
"Provide technical training (agriculture, livestock breeding, livelihood)" = "Provide technical training",
"Provide support for Income Generating Activities" = "Provide support for income generation",
"Provide monthly cash-based transfers to acutely food insecure population in rural areas" =
"Provide monthly cash-based transfers",
"Cash for Work / Food for Assets activities" = "Cash for Work / Food for Assets",
"Provide fishery kits (in-kind / CBT)" = "Provide fishery kits",
"Provide crops & vegetables kits (in-kind / CBT)" = "Provide crops & vegetables kits",
"Provide livestock kits (in-kind / CBT)" = "Provide livestock kits")) %>%
mutate(implementing_partners = recode(implementing_partners,
"Save the children" = "Save the Children")) %>%
mutate(implementing_partner_type =
ifelse(implementing_partners %in% c("Kaw Lah Foundation", "Hakha Baptist Association (HBA)", "Arkan Research and Watch",
"Hlaing Development Network", "Mangrove Service Network (MSN)", "Kyal Sin May",
"Swan Saung Shin", "Sein Lei Ayeyar"), "NNGO", implementing_partner_type),
implementing_partner_type =
ifelse(implementing_partners %in% c("Single Touch Point Company Limited (STP)", "Neo Prospect Company Limited"),
"other", implementing_partner_type),
implementing_partner_type = ifelse(implementing_partners == "Helen Keller International", "INGO", implementing_partner_type))
fsc %>%
count(state)
fsc %>%
filter(unique_beneficiaries == "Yes" & !is.na(usd_hhd_bin)) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
mutate(`%_of_households` = round(households / sum(households)* 100, digits = 2)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = usd_hhd_bin)) +
geom_col() +
geom_text(aes(label = `%_of_households`), vjust = -0.5, size = 3) +
scale_fill_brewer(palette = "Greens") +
scale_y_continuous(labels = comma, breaks = seq(0, 30000, by = 5000)) +
theme(legend.position = "none") +
labs(x = "USD value of cash transfer per household",
y = "Number of households",
title = "Number of households by value of cash transfer per household",
subtitle = "Figures at the top of each bar show percentage of total households")
cash_delivery_mechanism <- fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes" & !is.na(cash_delivery_mechanism) ) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
mutate(households = round(households)) %>%
count(usd_hhd_bin,cash_delivery_mechanism, wt = households) %>%
pivot_wider(names_from = usd_hhd_bin, values_from = n) %>%
adorn_totals("col", na.rm = TRUE) %>%
rename(total_hhd = Total) %>%
mutate(pc_of_hhd = round(total_hhd / sum(total_hhd) * 100, digits = 2)) %>%
arrange(desc(total_hhd))
cash_delivery_mechanism %>%
kable(caption = "Cash transfer, hybrid and voucher values per household by cash delivery mechanism (USD)",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped")
fsc %>%
filter(unique_beneficiaries == "Yes" & !is.na(usd_hhd_bin)) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
mutate(`%_of_households` = round(households / sum(households)* 100, digits = 2)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = usd_hhd_bin)) +
geom_col() +
geom_text(aes(label = `%_of_households`), vjust = -0.5, size = 3) +
scale_fill_brewer(palette = "Greens") +
scale_y_continuous(labels = comma, breaks = seq(0, 25000, by = 5000)) +
theme(legend.position = "none") +
labs(x = "USD value of cash transfer per household",
y = "Number of households",
title = "Number of households by value of cash transfer per household",
subtitle = "Figures at the top of each bar show percentage of total households")
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(activity) %>%
summarise(households = round(sum(households, na.rm = TRUE)),
total_value_usd = round(sum(total_value_usd, na.rm = TRUE))) %>%
mutate(avg_transfer_value = round(total_value_usd / households, digits = 2)) %>%
arrange(desc(avg_transfer_value)) %>%
kable(caption = "Average value (USD) of household package values per activity",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped")
fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes") %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(activity, usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = activity)) +
geom_col() +
scale_y_continuous(labels = comma) +
labs(x = "") +
labs(title = "Variation in the per household values of intervention packages in USD",
subtitle = "Faceted by activity; contains only data from activities using cash, hybrid or voucher modalities") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90),
plot.title = element_text(size = 12)) +
facet_wrap(~ activity, scales = "free_y")
# reading in 5ws
fsc <- read_excel(
"FSC 5W 2021 - GEOADMINS_final 19_Jan to Dec 2021 IM Combined_Draft_28012022.xlsx",
sheet = "FSC 5W Activites",
skip = 5) %>%
janitor::clean_names() %>%
select(month_of_implementation:hrp_version) %>%
rename_all(~str_replace_all(., "^number_of_", "")) %>%
rename_all(~str_replace_all(., "^number_", "")) %>%
rename(admin4_pcode = admin3_pcode,
admin3_pcode = admin2_pcode,
beneficiaries = reached_beneficiaries,
households = reached_households,
beneficiary_type = beneficiaries_type) %>%
mutate(industrial_zones = replace(industrial_zones, industrial_zones == "No", NA),
frequency = replace(frequency, frequency == "N/A", NA)) %>%
mutate(location = case_when(camp != "NA" ~ camp,
industrial_zones != "NA" ~ industrial_zones,
village_ward_town != "NA" ~ village_ward_town)) %>%
mutate(location_type = case_when(camp != "NA" ~ "camp",
industrial_zones != "NA" ~ "industrial_zone",
village_ward_town != "NA" ~ "village_ward_town")) %>%
mutate(locations_fuzzy = str_replace_all(location, "[[:punct:]]", " ")) %>%
mutate(total_value_mmk = value_per_household * households) %>%
mutate(date = my(month_of_implementation)) %>%
mutate(u_ben = ifelse(unique_beneficiaries == "Yes", beneficiaries, 0)) %>%
mutate(state = as.character(fct_recode(state,
"Kachin" = "kachin"))) %>%
# are you even using this? if not, take it out
mutate(mmk_hhd_bin = case_when(value_per_household < 10000 ~ "below_10k",
value_per_household >= 10000 & value_per_household <= 20000 ~ "10k_20k",
value_per_household > 20000 & value_per_household <= 50000 ~ "20k_50k",
value_per_household > 50000 & value_per_household <= 70000 ~ "50k_70k",
value_per_household > 70000 & value_per_household < 100000 ~ "70k_100k",
value_per_household >= 100000 & value_per_household < 200000 ~ "100k_200k",
value_per_household >= 200000 & value_per_household <= 300000 ~ "200k_300k",
value_per_household > 300000 ~ "above_300k",
TRUE ~ NA_character_),
mmk_hhd_bin = fct_relevel(mmk_hhd_bin, c("less_than_10k", "10k_20k","20k_50k", "50k_70k", "70k_100k", "100k_200k",
"200k_300k","more_than_300k")),
frequency = recode(frequency, "monthly" = "Monthly")) %>%
mutate(new_value_hhd = total_value_usd / households,
new_value_person = total_value_usd / beneficiaries,
usd_hhd_bin =
case_when(new_value_hhd < 10 ~ "<$10",
new_value_hhd >= 10 & new_value_hhd < 20 ~ ">=$10_<$20",
new_value_hhd >= 20 & new_value_hhd < 40 ~ ">=$20_<$40",
new_value_hhd >= 40 & new_value_hhd < 60 ~ ">=$40_<$60",
new_value_hhd >= 60 & new_value_hhd < 80 ~ ">=$60_<$80",
new_value_hhd >= 80 & new_value_hhd < 100 ~ ">=$80_<$100",
new_value_hhd >= 100 ~ ">=$100",
TRUE ~ NA_character_),
usd_hhd_bin = fct_relevel(usd_hhd_bin, c("<$10", ">=$10_<$20", ">=$20_<$40", ">=$40_<$60",
">=$60_<$80", ">=$80_<$100", ">=$100"))) %>%
mutate(hrp_indicator =
recode(hrp_indicator,
"Number of people who received food and/or cash assistance" =
"1.Number of people who received food and/or cash assistance",
"Number of people who received agriculture and other livelihood support, contributing to household food security" =
"2.Number of people who received agriculture and other livelihood support")) %>%
mutate(beneficiary_type = str_trim(beneficiary_type)) %>%
mutate(beneficiary_type = as.character(fct_recode(beneficiary_type,
"Rakhine stateless" = "Non-displaced stateless people in Rakhine"))) %>%
mutate(activity = recode(activity,
"Provide monthly food baskets through in-kind assistance to acutely food insecure population in rural areas" =
"Provide monthly food baskets",
"Provide technical training (agriculture, livestock breeding, livelihood)" = "Provide technical training",
"Provide support for Income Generating Activities" = "Provide support for income generation",
"Provide monthly cash-based transfers to acutely food insecure population in rural areas" =
"Provide monthly cash-based transfers",
"Cash for Work / Food for Assets activities" = "Cash for Work / Food for Assets",
"Provide fishery kits (in-kind / CBT)" = "Provide fishery kits",
"Provide crops & vegetables kits (in-kind / CBT)" = "Provide crops & vegetables kits",
"Provide livestock kits (in-kind / CBT)" = "Provide livestock kits")) %>%
mutate(implementing_partners = recode(implementing_partners,
"Save the children" = "Save the Children")) %>%
mutate(implementing_partner_type =
ifelse(implementing_partners %in% c("Kaw Lah Foundation", "Hakha Baptist Association (HBA)", "Arkan Research and Watch",
"Hlaing Development Network", "Mangrove Service Network (MSN)", "Kyal Sin May",
"Swan Saung Shin", "Sein Lei Ayeyar"), "NNGO", implementing_partner_type),
implementing_partner_type =
ifelse(implementing_partners %in% c("Single Touch Point Company Limited (STP)", "Neo Prospect Company Limited"),
"other", implementing_partner_type),
implementing_partner_type = ifelse(implementing_partners == "Helen Keller International", "INGO", implementing_partner_type))
fsc %>%
filter(unique_beneficiaries == "Yes" & !is.na(usd_hhd_bin)) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
mutate(`%_of_households` = round(households / sum(households)* 100, digits = 2)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = usd_hhd_bin)) +
geom_col() +
geom_text(aes(label = `%_of_households`), vjust = -0.5, size = 3) +
scale_fill_brewer(palette = "Greens") +
scale_y_continuous(labels = comma, breaks = seq(0, 25000, by = 5000)) +
theme(legend.position = "none") +
labs(x = "USD value of cash transfer per household",
y = "Number of households",
title = "Number of households by value of cash transfer per household",
subtitle = "Figures at the top of each bar show percentage of total households")
cash_delivery_mechanism <- fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes" & !is.na(cash_delivery_mechanism) ) %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
mutate(households = round(households)) %>%
count(usd_hhd_bin,cash_delivery_mechanism, wt = households) %>%
pivot_wider(names_from = usd_hhd_bin, values_from = n) %>%
adorn_totals("col", na.rm = TRUE) %>%
rename(total_hhd = Total) %>%
mutate(pc_of_hhd = round(total_hhd / sum(total_hhd) * 100, digits = 2)) %>%
arrange(desc(total_hhd))
cash_delivery_mechanism %>%
kable(caption = "Cash transfer, hybrid and voucher values per household by cash delivery mechanism (USD)",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped")
filter(cash_delivery_mechanism, cash_delivery_mechanism == "Direct cash payment") %>%  pull(pc_of_hhd)
cash_delivery_mechanism %>%
kable(caption = "Cash transfer, hybrid and voucher values per household by cash delivery mechanism (USD)",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped")
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(activity) %>%
summarise(households = round(sum(households, na.rm = TRUE)),
total_value_usd = round(sum(total_value_usd, na.rm = TRUE))) %>%
mutate(avg_transfer_value = round(total_value_usd / households, digits = 2)) %>%
arrange(desc(avg_transfer_value)) %>%
kable(caption = "Average value (USD) of household package values per activity",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped")
fsc %>%
filter(!is.na(usd_hhd_bin) & unique_beneficiaries == "Yes") %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(activity, usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
ggplot(aes(x = usd_hhd_bin, y = households, fill = activity)) +
geom_col() +
scale_y_continuous(labels = comma) +
labs(x = "") +
labs(title = "Variation in the per household values of intervention packages in USD",
subtitle = "Faceted by activity; contains only data from activities using cash, hybrid or voucher modalities") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90),
plot.title = element_text(size = 12)) +
facet_wrap(~ activity, scales = "free_y")
fsc %>% count(usd_hhd_bin)
fsc %>%
filter(usd_hhd_bin == ">=$60_<$80") %>%
count(new_value_hhd, sort = TRUE)
fsc %>% filter(activity == "Provide monthly cash-based transfer") %>%
count(usd_hhd_bin, wt = beneficiaries)
fsc %>% filter(activity == "Provide monthly cash-based transfers") %>%
count(usd_hhd_bin, wt = beneficiaries)
fsc %>% filter(activity == "Provide monthly cash-based transfers" & !is.na(usd_hhd_bin)) %>%
count(usd_hhd_bin, wt = beneficiaries) %>%
mutate(pc_of_total = n / sum(n))
fsc %>% filter(activity == "Provide monthly cash-based transfers" & !is.na(usd_hhd_bin)) %>%
count(usd_hhd_bin, wt = beneficiaries) %>%
mutate(pc_of_total = round(n / sum(n) * 100, digits = 2))
cbt_bins <- fsc %>% filter(activity == "Provide monthly cash-based transfers" & !is.na(usd_hhd_bin)) %>%
count(usd_hhd_bin, wt = beneficiaries) %>%
mutate(pc_of_total = round(n / sum(n) * 100, digits = 2))
cbt_bins
filter(cbt_bins, usd_hhd_bin == ">=$60_<$80") %>% pull(pc_of_total)
fsc %>%
filter(unique_beneficiaries == "Yes" & activity == "Provide monthly cash-based transfers") %>%
filter(!is.na(new_value_hhd)) %>%
mutate(pc_meb = new_value_hhd / 190555) %>%
group_by(usd_hhd_bin) %>%
summarise(avg_pc_of_meb = round(mean(pc_meb) * 100, digits = 2),
avg_usd_month = round(mean(new_value_hhd, na.rm = TRUE), digits = 2),
households = round(sum(households))) %>%
mutate(pc_of_hhd = round(households / sum(households) * 100, digits = 2)) %>%
kable(caption = "Monthly cash-based transfer by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
filter(unique_beneficiaries == "Yes" & activity == "Provide monthly cash-based transfers") %>%
filter(!is.na(value_per_household)) %>%
mutate(pc_meb = value_per_household / 190555) %>%
group_by(usd_hhd_bin) %>%
summarise(avg_pc_of_meb = round(mean(pc_meb) * 100, digits = 2),
avg_usd_month = round(mean(new_value_hhd, na.rm = TRUE), digits = 2),
households = round(sum(households))) %>%
mutate(pc_of_hhd = round(households / sum(households) * 100, digits = 2)) %>%
kable(caption = "Monthly cash-based transfer by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
91.97 / 68.95 * 64.91
68.95 / 91.97 * 64.91
fsc %>% filter(value_per_household_usd == 10.5) %>% {mean(.$new_value_hhd)}
round(fsc %>% filter(value_per_household_usd == 10.5) %>% {mean(.$new_value_hhd)}, digits = 2)
round(fsc %>% filter(value_per_household_usd == 10.5) %>% {median(.$new_value_hhd)}, digits = 2)
fsc %>%
group_by(activity) %>%
summarise(hhd_frequencies = round(sum(households, na.rm = TRUE)),
total_value_usd = round(sum(total_value_usd, na.rm = TRUE))) %>%
mutate(avg_transfer_value = round(total_value_usd / households, digits = 2)) %>%
arrange(desc(avg_transfer_value)) %>%
kable(caption = "Average value (USD) of household package values per activity",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped")
fsc %>%
group_by(activity) %>%
summarise(hhd_frequencies = round(sum(households, na.rm = TRUE)),
total_value_usd = round(sum(total_value_usd, na.rm = TRUE))) %>%
mutate(avg_transfer_value = round(total_value_usd / hhd_frequencies, digits = 2)) %>%
arrange(desc(avg_transfer_value)) %>%
kable(caption = "Average value (USD) of household package values per activity",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped")
fsc %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
group_by(activity) %>%
summarise(hhd_frequencies = round(sum(households, na.rm = TRUE)),
total_value_usd = round(sum(total_value_usd, na.rm = TRUE))) %>%
mutate(avg_transfer_value = round(total_value_usd / hhd_frequencies, digits = 2)) %>%
arrange(desc(avg_transfer_value)) %>%
kable(caption = "Average value (USD) of household package values per activity",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped")
fsc %>% filter(activity == "Cash for Work / Food for Assets") %>%
count(usd_hhd_bin, wt = households, sort = TRUE)
fsc %>% filter(activity == "Cash for Work / Food for Assets") %>%
count(new_value_hhd)
fsc %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
filter(new_value_hhd > 700) %>%
group_by(activity) %>%
summarise(hhd_frequencies = round(sum(households, na.rm = TRUE)),
total_value_usd = round(sum(total_value_usd, na.rm = TRUE))) %>%
mutate(avg_transfer_value = round(total_value_usd / hhd_frequencies, digits = 2)) %>%
arrange(desc(avg_transfer_value)) %>%
kable(caption = "Average value (USD) of household package values per activity",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped")
fsc %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
filter(new_value_hhd > 1000) %>%
group_by(activity) %>%
summarise(hhd_frequencies = round(sum(households, na.rm = TRUE)),
total_value_usd = round(sum(total_value_usd, na.rm = TRUE))) %>%
mutate(avg_transfer_value = round(total_value_usd / hhd_frequencies, digits = 2)) %>%
arrange(desc(avg_transfer_value)) %>%
kable(caption = "Average value (USD) of household package values per activity",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped")
fsc %>%
filter(delivery_modality %in% c("Cash", "Hybrid (In-kind & Cash)", "Voucher")) %>%
filter(new_value_hhd < 700) %>%
group_by(activity) %>%
summarise(hhd_frequencies = round(sum(households, na.rm = TRUE)),
total_value_usd = round(sum(total_value_usd, na.rm = TRUE))) %>%
mutate(avg_transfer_value = round(total_value_usd / hhd_frequencies, digits = 2)) %>%
arrange(desc(avg_transfer_value)) %>%
kable(caption = "Average value (USD) of household package values per activity",
format.args = list(big.mark = ",")) %>%
kable_classic_2(lightable_options = "striped")
glimpse(fsc)
fsc %>% filter(hrp_indicator == "2.Number of people who received agriculture and other livelihood support" &
implementing_partners == "WFP")
glimpse(fsc)
fsc %>%  count(months_of_food_ration_distributed)
fsc %>%  count(months_of_food_ration_distributed, sort = TRUE)
fsc %>% group_by(activity) %>% count(activity_description)
fsc %>%
filter(unique_beneficiaries == "Yes" & activity == "Provide monthly cash-based transfers") %>%
filter(!is.na(new_value_hhd)) %>%
mutate(pc_meb = new_value_hhd / 114.55) %>%
group_by(usd_hhd_bin) %>%
summarise(avg_pc_of_meb = round(mean(pc_meb) * 100, digits = 2),
avg_usd_month = round(mean(new_value_hhd, na.rm = TRUE), digits = 2),
households = round(sum(households))) %>%
mutate(pc_of_hhd = round(households / sum(households) * 100, digits = 2)) %>%
kable(caption = "Monthly cash-based transfer by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
glimpse(fsc)
