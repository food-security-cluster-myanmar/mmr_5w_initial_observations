mutate(pin_new = ifelse(state == "Yangon", target_2022, pin_2022),
target_new = ifelse(state == "Yangon", pin_2022, target_2022))
# this exists for the HRP / non-HRP column
hrp2021_adm3_list <- pin %>% filter(hrp_version == "hrp") %>% pull(admin3_pcode)
# reading in 5ws
fsc <- read_excel(
"FSC 5W 2021 - GEOADMINS_final 19_Jan to Dec 2021 IM Combined_Draft_28012022.xlsx",
sheet = "FSC 5W Activites",
skip = 5) %>%
janitor::clean_names() %>%
select(month_of_implementation:hrp_version) %>%
rename_all(~str_replace_all(., "^number_of_", "")) %>%
rename_all(~str_replace_all(., "^number_", "")) %>%
rename(admin5_pcode = admin3_pcode,
admin3_pcode = admin2_pcode,
beneficiaries = reached_beneficiaries,
households = reached_households,
beneficiary_type = beneficiaries_type) %>%
mutate(industrial_zones = replace(industrial_zones, industrial_zones == "No", NA),
frequency = replace(frequency, frequency == "N/A", NA)) %>%
mutate(location = case_when(camp != "NA" ~ camp,
industrial_zones != "NA" ~ industrial_zones,
village_ward_town != "NA" ~ village_ward_town)) %>%
mutate(location_type = case_when(camp != "NA" ~ "camp",
industrial_zones != "NA" ~ "industrial_zone",
village_ward_town != "NA" ~ "village_ward_town"),
locations_fuzzy = str_replace_all(location, "[[:punct:]]", " "),
locations_fuzzy = tolower(locations_fuzzy),
location = tolower(location)) %>%
mutate(total_value_mmk = value_per_household * households,
date            = my(month_of_implementation),
u_ben           = ifelse(unique_beneficiaries == "Yes", beneficiaries, 0)) %>%
mutate(state = as.character(fct_recode(state,
"Kachin" = "kachin")),
frequency = recode(frequency, "monthly" = "Monthly"),
township = recode(township, "kyaukme" = "Kyaukme")) %>%
mutate(new_value_hhd = total_value_usd / households,
new_value_person = total_value_usd / beneficiaries,
usd_hhd_bin =
case_when(new_value_hhd < 10 ~ "<$10",
new_value_hhd >= 10 & new_value_hhd < 20 ~ ">=$10_<$20",
new_value_hhd >= 20 & new_value_hhd < 30 ~ ">=$20_<$30",
new_value_hhd >= 30 & new_value_hhd < 40 ~ ">=$30_<$40",
new_value_hhd >= 40 & new_value_hhd < 50 ~ ">=$40_<$50",
new_value_hhd >= 50 & new_value_hhd < 60 ~ ">=$50_<$60",
new_value_hhd >= 60 & new_value_hhd < 70 ~ ">=$60_<$70",
new_value_hhd >= 70 & new_value_hhd < 80 ~ ">=$70_<$80",
new_value_hhd >= 80 & new_value_hhd < 90 ~ ">=$80_<$90",
new_value_hhd >= 90 & new_value_hhd < 100 ~ ">=$90_<$100",
new_value_hhd >= 100 ~ ">=$100",
TRUE ~ NA_character_),
usd_hhd_bin = fct_relevel(usd_hhd_bin, c("<$10", ">=$10_<$20", ">=$20_<$30", ">=$30_<$40", ">=$40_<$50",">=$50_<$60",
">=$60_<$70", ">=$70_<$80", ">=$80_<$90",">=$90_<$100",">=$100"))) %>%
mutate(hrp_indicator =
recode(hrp_indicator,
"Number of people who received food and/or cash assistance" =
"1.Number of people who received food and/or cash assistance",
"Number of people who received agriculture and other livelihood support, contributing to household food security" =
"2.Number of people who received agriculture and other livelihood support")) %>%
mutate(beneficiary_type = str_trim(beneficiary_type)) %>%
mutate(beneficiary_type = as.character(fct_recode(beneficiary_type,
"Rakhine stateless" = "Non-displaced stateless people in Rakhine"))) %>%
mutate(activity = recode(activity,
"Provide monthly food baskets through in-kind assistance to acutely food insecure population in rural areas" =
"Provide monthly food baskets",
"Provide technical training (agriculture, livestock breeding, livelihood)" = "Provide technical training",
"Provide support for Income Generating Activities" = "Provide support for income generation",
"Provide monthly cash-based transfers to acutely food insecure population in rural areas" =
"Provide monthly cash-based transfers",
"Cash for Work / Food for Assets activities" = "Cash for Work / Food for Assets",
"Provide fishery kits (in-kind / CBT)" = "Provide fishery kits",
"Provide crops & vegetables kits (in-kind / CBT)" = "Provide crops & vegetables kits",
"Provide livestock kits (in-kind / CBT)" = "Provide livestock kits")) %>%
mutate(implementing_partners = recode(implementing_partners,
"Save the children" = "Save the Children")) %>%
mutate(implementing_partner_type =
ifelse(implementing_partners %in% c("Kaw Lah Foundation", "Hakha Baptist Association (HBA)", "Arkan Research and Watch",
"Hlaing Development Network", "Mangrove Service Network (MSN)", "Kyal Sin May",
"Swan Saung Shin", "Sein Lei Ayeyar"), "NNGO", implementing_partner_type),
implementing_partner_type =
ifelse(implementing_partners %in% c("Single Touch Point Company Limited (STP)", "Neo Prospect Company Limited"),
"other", implementing_partner_type),
implementing_partner_type = ifelse(implementing_partners == "Helen Keller International", "INGO", implementing_partner_type)) %>%
mutate(hrp_ierp = case_when(admin3_pcode %in% hrp2021_adm3_list ~ "hrp",
date > "2021-05-01" ~ "ierp",
TRUE ~ "non_hrp")) %>%
mutate(covid_19_response = recode(covid_19_response,
"No" = "no", "Yes" = "yes"),
covid_19_response = replace_na(covid_19_response, "no"))
# ben dataset -- tidy format 5Ws for beneficiaries
ben <- fsc %>%
filter(unique_beneficiaries == "Yes") %>%
select(date,
implementing_partners, implementing_partner_type,
state, township, village_ward_town, location, location_type, admin1_pcode, admin3_pcode,
activity, activity_status, hrp_indicator, beneficiary_type,
child_male, child_female, adult_male, adult_female, elderly_male, elderly_female) %>%
pivot_longer(cols = child_male:elderly_female,
names_to = "disaggregation", values_to = "beneficiaries", values_drop_na = TRUE)
# shapefiles
pcode3_shape <- st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
# pcode3_shape <- st_read("./admin3 boundary old version/admin3 boundary old version.shp", quiet = TRUE) %>%
#   rename(state = ST,
#           admin1_pcode = ST_PCODE,
#           township = TS,
#           admin3_pcode = TS_PCODE)
# for relevelling -- this is in order of beneficiaries
sr_ord <- c("Yangon", "Rakhine", "Mandalay", "Ayeyarwady", "Magway", "Kachin", "Shan (North)", "Kayin",
"Mon", "Sagaing", "Kayah", "Chin", "Shan (South)", "Bago (East)", "Tanintharyi", "Shan (East)")
# for printing the targets of the pin
target_ben_2021 <- pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0)
# shows colours and hecx codes in palette
# show_col(hue_pal()(6))
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(fuzzyjoin)
library(scales)
library(magrittr)
library(sf)
library(s2)
library(bookdown)
library(data.table)
library(ggsflabel)
library(patchwork)
library(plotly)
library(kableExtra)
library(DT)
library(viridis)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# reading in 5ws
fsc <- read_csv("fsc5w_2021.csv") %>%
rename(admin5_pcode = admin4_pcode)
fsc %>% count(covid_19_response)
fsc %>%
filter(covid_19_response == "yes" & hrp_ierp == "ierp") %>%
pull(activity)
fsc %>%
filter(covid_19_response == "yes" & hrp_ierp == "ierp") %>%
distinct(implementing_partners, activity, state) %>%
pull()
fsc %>%
filter(covid_19_response == "yes" & hrp_ierp == "ierp") %>%
distinct(implementing_partners, activity, state)
fsc %>%
filter(covid_19_response == "yes" & hrp_ierp == "ierp") %>%
distinct(implementing_partners, activity, state, month)
fsc %>%
filter(covid_19_response == "yes" & hrp_ierp == "ierp") %>%
distinct(implementing_partners, activity, state, date)
fsc %>%
filter(covid_19_response == "yes" & hrp_ierp == "ierp") %>%
distinct(implementing_partners, activity, state, date) %>%
pull(activity_description)
fsc %>%
filter(covid_19_response == "yes" & hrp_ierp == "ierp") %>%
distinct(implementing_partners, activity, state, date, activity_description) %>%
pull(activity_description)
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
summarise(HRP_ben = sum(beneficiaries[hrp_ierp == "hrp"]),
IERP_ben = sum(beneficiaries[hrp_ierp == "ierp"]),
non_HRP_ben = sum(beneficiaries[hrp_ierp == "non_hrp"]),
total_ben = sum(beneficiaries))
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
mutate(pc_of_total = beneficiaries / sum(beneficiaries) * 100)
fsc %>%
group_by(delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
mutate(pc_of_total = beneficiaries / sum(beneficiaries) * 100)
fsc %>%
group_by(hrp_ierp, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
ggplot(aes(x = delivery_modality, y = beneficiaries, fill = hrp_ierp)) +
geom_col(position = "dodge")
fsc %>%
filter(hrp_ierp != "non_hrp") %>%
group_by(hrp_ierp, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
ggplot(aes(x = delivery_modality, y = beneficiaries, fill = hrp_ierp)) +
geom_col(position = "dodge")
fsc %>%
#filter(hrp_ierp != "non_hrp") %>%
group_by(hrp_ierp, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
ggplot(aes(x = delivery_modality, y = beneficiaries, fill = hrp_ierp)) +
geom_col(position = "dodge")
fsc %>% count(activity)
fsc %>%
filter(activity %in% c("Provide fishery kits", "Provide livestock kits")) %>%
distinct(reporting_organization, activity_description)
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
filter(activity %in% c("Provide fishery kits", "Provide livestock kits")) %>%
group_by(reporting_organization, activity_description) %>%
summarise(beneficiaries = sum(beneficiaries))
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
filter(activity %in% c("Provide fishery kits", "Provide livestock kits")) %>%
group_by(reporting_organization, activity_description) %>%
summarise(beneficiaries = sum(beneficiaries)) %>% pander()
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
filter(activity %in% c("Provide fishery kits", "Provide livestock kits")) %>%
group_by(reporting_organization, activity, activity_description) %>%
summarise(beneficiaries = sum(beneficiaries)) %>% pander()
fsc %>% filter(hrp_ierp == "ierp") %>%
filter(unique_beneficiaries == "Yes") %>%
fsc %>% filter(hrp_ierp == "ierp") %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(state) %>%
summarise(beneficiaries = sum(beneficiaries))
fsc %>% filter(hrp_ierp == "ierp") %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(state) %>%
summarise(beneficiaries = sum(beneficiaries))
fsc %>% filter(hrp_ierp == "ierp") %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(state) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
filter(state %in% c("Yangon", "Mandalay"))
fsc %>%
filter(unique_beneficiaries == "Yes" & hrp_ierp != "non_hrp") %>%
sum_ben2(hrp_indicator, hrp_ierp) %>%
ungroup() %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries) %>%
mutate(total_HRP_IERP = hrp + ierp,
pc_of_total = round(total_HRP_IERP / sum(total_HRP_IERP) * 100, digits = 2)) %>%
select(`HRP_indicator/activity` = hrp_indicator, HRP = hrp, IERP = ierp, total_HRP_IERP, pc_of_total) %>%
kable(caption = "Beneficiaries reached, by HRP indicator", format.args = list(big.mark = ",")) %>%
# column_spec(6, color = spec_color(hrp_act_ord$beneficiaries[1:8], end = 0.8, direction = -1, option = "G")) %>%
kable_classic_2("striped") %>%
footnote("non-HRP beneficiaries have been excluded",
general_title = "")
fsc %>%
filter(unique_beneficiaries == "Yes" & hrp_ierp != "non_hrp") %>%
group_by(hrp_ierp, activity) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
rename(`HRP_indicator/activity` = activity) %>%
mutate(hrp_ierp = recode(hrp_ierp, "hrp" = "HRP", "ierp" = "IERP")) %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries) %>%
mutate(total_HRP_IERP = HRP + IERP,
pc_of_total = round(total_HRP_IERP / sum(total_HRP_IERP) * 100, digits = 2)) %>%
arrange(desc(pc_of_total)) %>%
kable(caption = "Beneficiaries reached, by activity", format.args = list(big.mark = ",")) %>%
# column_spec(6, color = spec_color(hrp_act_ord$beneficiaries[1:8], end = 0.8, direction = -1, option = "G")) %>%
kable_classic_2("striped") %>%
footnote("non-HRP beneficiaries have been excluded",
general_title = "")
fsc %>%
filter(unique_beneficiaries == "Yes" & hrp_ierp != "non_hrp") %>%
group_by(hrp_ierp, activity) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
rename(HRP_activity = `HRP_indicator/activity`) %>%
mutate(hrp_ierp = recode(hrp_ierp, "hrp" = "HRP", "ierp" = "IERP")) %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries) %>%
mutate(total_HRP_IERP = HRP + IERP,
pc_of_total = round(total_HRP_IERP / sum(total_HRP_IERP) * 100, digits = 2)) %>%
arrange(desc(pc_of_total)) %>%
kable(caption = "Beneficiaries reached, by activity", format.args = list(big.mark = ",")) %>%
# column_spec(6, color = spec_color(hrp_act_ord$beneficiaries[1:8], end = 0.8, direction = -1, option = "G")) %>%
kable_classic_2("striped") %>%
footnote("non-HRP beneficiaries have been excluded",
general_title = "")
fsc %>%
filter(unique_beneficiaries == "Yes" & hrp_ierp != "non_hrp") %>%
group_by(hrp_ierp, activity) %>%
summarise(beneficiaries = sum(beneficiaries))
fsc %>%
filter(unique_beneficiaries == "Yes" & hrp_ierp != "non_hrp") %>%
group_by(hrp_ierp, activity) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
rename(HRP_activity = activity) %>%
mutate(hrp_ierp = recode(hrp_ierp, "hrp" = "HRP", "ierp" = "IERP")) %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries) %>%
mutate(total_HRP_IERP = HRP + IERP,
pc_of_total = round(total_HRP_IERP / sum(total_HRP_IERP) * 100, digits = 2)) %>%
arrange(desc(pc_of_total)) %>%
kable(caption = "Beneficiaries reached, by activity", format.args = list(big.mark = ",")) %>%
# column_spec(6, color = spec_color(hrp_act_ord$beneficiaries[1:8], end = 0.8, direction = -1, option = "G")) %>%
kable_classic_2("striped") %>%
footnote("non-HRP beneficiaries have been excluded",
general_title = "")
fsc %>%
group_by(hrp_ierp, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
ggplot(aes(x = delivery_modality, y = beneficiaries, fill = hrp_ierp)) +
geom_col(position = "dodge") +
labs()
fsc %>%
filter(!is.na(delivery_modality)) %>%
group_by(hrp_ierp, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
ggplot(aes(x = delivery_modality, y = beneficiaries, fill = hrp_ierp)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = percent) +
labs()
fsc %>%
filter(!is.na(delivery_modality)) %>%
group_by(hrp_ierp, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
ggplot(aes(x = delivery_modality, y = beneficiaries, fill = hrp_ierp)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = comma) +
labs(x = "Delivery modality",
y = "Number of beneficiaries",
title = "Delivery modalities by HRP")
fsc %>%
filter(!is.na(delivery_modality)) %>%
group_by(hrp_ierp, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
ggplot(aes(x = delivery_modality, y = beneficiaries, fill = hrp_ierp)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = comma) +
labs(x = "Delivery modality",
y = "Number of beneficiaries",
title = "Beneficiary frequencies by delivery modalities and response plan",
subtitle = "Figures are in beneficiary frequencies")
fsc %>%
filter(!is.na(delivery_modality)) %>%
group_by(hrp_ierp, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
ggplot(aes(x = delivery_modality, y = beneficiaries, fill = hrp_ierp)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = comma, breaks = seq(0, 3000000, by = 500000)) +
labs(x = "Delivery modality",
y = "Number of beneficiaries",
title = "Beneficiary frequencies by delivery modalities and response plan",
subtitle = "Figures are in beneficiary frequencies")
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
filter(!is.na(beneficiary_type) & hrp_ierp != "non_hrp") %>%
mutate(after_hrp = ifelse(date > "2021-06-01", "after_addendum", "before_addendum")) %>%
sum_ben2(after_hrp, beneficiary_type) %>%
pivot_wider(names_from = after_hrp, values_from = beneficiaries) %>%
adorn_totals("col") %>%
mutate(`%before` = round(before_addendum / Total * 100, digits = 2),
`%after` = round(after_addendum / Total * 100, digits = 2)) %>%
relocate(before_addendum, .after = beneficiary_type) %>%
kable(caption = "Beneficiaries reached by type, before and after HRP addendum", format.args = list(big.mark = ",")) %>%
kable_classic_2() %>%
footnote("Only HRP/IERP beneficiaries are included",
general_title = "")
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
filter(!is.na(beneficiary_type) & hrp_ierp != "non_hrp") %>%
sum_ben2(hrp_ierp, beneficiary_type) %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries)
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
filter(!is.na(beneficiary_type)) %>%
sum_ben2(hrp_ierp, beneficiary_type) %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries)
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
filter(!is.na(beneficiary_type) & hrp_ierp != "non_hrp") %>%
sum_ben2(hrp_ierp, beneficiary_type) %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries) %>%
adorn_totals("col")
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
filter(!is.na(beneficiary_type) & hrp_ierp != "non_hrp") %>%
sum_ben2(hrp_ierp, beneficiary_type) %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries) %>%
adorn_totals("col") %>%
mutate(`%hrp` = round(hrp / Total * 100, digits = 2),
`%ierp` = round(ierp / Total * 100, digits = 2)) %>%
relocate(hrp, .after = beneficiary_type) %>%
kable(caption = "Beneficiaries reached by type, by response plan", format.args = list(big.mark = ",")) %>%
kable_classic_2() %>%
footnote("Only HRP/IERP beneficiaries are included",
general_title = "")
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
filter(!is.na(beneficiary_type) & hrp_ierp != "non_hrp") %>%
sum_ben2(hrp_ierp, beneficiary_type) %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries) %>%
adorn_totals("col") %>%
mutate(`%HRP` = round(hrp / Total * 100, digits = 2),
`%IERP` = round(ierp / Total * 100, digits = 2)) %>%
relocate(hrp, .after = beneficiary_type) %>%
rename(HRP = hrp,
IERP = ierp) %>%
kable(caption = "Beneficiaries reached by type, by response plan", format.args = list(big.mark = ",")) %>%
kable_classic_2() %>%
footnote("Only HRP/IERP beneficiaries are included",
general_title = "")
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
filter(!is.na(beneficiary_type) & hrp_ierp != "non_hrp") %>%
sum_ben2(hrp_ierp, beneficiary_type) %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries) %>%
adorn_totals("col") %>%
mutate(`%_of_HRP` = round(hrp / sum(hrp) * 100, digits = 2),
`%_of_IERP` = round(ierp / sum(ierp) * 100, digits = 2)) %>%
relocate(hrp, .after = beneficiary_type) %>%
rename(HRP = hrp,
IERP = ierp) %>%
kable(caption = "Beneficiaries reached by type, by response plan", format.args = list(big.mark = ",")) %>%
kable_classic_2() %>%
footnote("Only HRP/IERP beneficiaries are included",
general_title = "")
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
filter(!is.na(beneficiary_type) & hrp_ierp != "non_hrp") %>%
sum_ben2(hrp_ierp, beneficiary_type) %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries) %>%
adorn_totals("col") %>%
mutate(`%_of_HRP` = round(hrp / sum(hrp) * 100, digits = 2),
`%_of_IERP` = round(ierp / sum(ierp, na.rm = TRUE) * 100, digits = 2)) %>%
relocate(hrp, .after = beneficiary_type) %>%
rename(HRP = hrp,
IERP = ierp) %>%
kable(caption = "Beneficiaries reached by type, by response plan", format.args = list(big.mark = ",")) %>%
kable_classic_2() %>%
footnote("Only HRP/IERP beneficiaries are included",
general_title = "")
fsc %>%
filter(unique_beneficiaries == "Yes") %>%
filter(!is.na(beneficiary_type)) %>%
sum_ben2(hrp_ierp, beneficiary_type) %>%
pivot_wider(names_from = hrp_ierp, values_from = beneficiaries) %>%
mutate(`%_of_HRP` = round(hrp / sum(hrp) * 100, digits = 2),
`%_of_IERP` = round(ierp / sum(ierp, na.rm = TRUE) * 100, digits = 2),
`%_of_nonHRP` = round(non_hrp / sum(non_hrp, na.rm = TRUE) * 100, digits = 2)) %>%
relocate(hrp, .after = beneficiary_type) %>%
rename(HRP = hrp,
IERP = ierp,
non_HRP = non_hrp) %>%
kable(caption = "Beneficiaries reached by type, by response plan", format.args = list(big.mark = ",")) %>%
kable_classic_2() %>%
footnote("Only HRP/IERP beneficiaries are included",
general_title = "")
fsc_disagg <- fsc %>%
pivot_longer(cols = c(child_male:elderly_female), names_to = "disagg", values_to = "ben_sub") %>%
left_join(tribble(
~age, ~sex, ~disagg, ~value,
"child", "male", "child_male", 0.162989989,
"child", "female", "child_female", 0.158900883,
"adult", "male", "adult_male", 0.271450831,
"adult", "female", "adult_female", 0.300444585,
"elderly", "male", "elderly_male", 0.044029423,
"elderly", "female", "elderly_female", 0.06218429
) %>%
select(disagg, census_prop = value), by = "disagg") %>%
filter(ben_sub != 0) %>%
mutate(ben_prop = ben_sub / beneficiaries,
ben_prop_compare = abs(census_prop - ben_prop),
same_as_census = ifelse(ben_prop_compare < 0.05, "backfilled", "real"))
fsc_disagg_values <- fsc_disagg %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(same_as_census) %>%
summarise(ben_sub = sum(ben_sub)) %>%
adorn_percentages("col") %>%
mutate(ben_sub = round(ben_sub * 100, digits = 2))
fsc_disagg_values %>%  glimpse()
fsc_disagg_values
fsc %>%
filter(!is.na(delivery_modality)) %>%
group_by(hrp_ierp, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
ggplot(aes(x = delivery_modality, y = beneficiaries, fill = hrp_ierp)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = comma, breaks = seq(0, 3000000, by = 500000)) +
labs(x = "Delivery modality",
y = "Number of beneficiaries",
title = "Beneficiary frequencies by delivery modalities and response plan",
subtitle = "Figures are in beneficiary frequencies",
fill = "")
# changed to beneficiary frequencies instead of unique beneficiaries
fsc %>%
filter(!is.na(delivery_modality)) %>%
group_by(delivery_modality, frequency) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
filter(beneficiaries > 0) %>%
pivot_wider(names_from = frequency, values_from = beneficiaries) %>%
adorn_totals("col", na.rm = TRUE) %>%
mutate(`%Total` = round(Total / sum(Total) * 100, digits = 2)) %>%
arrange(desc(Total)) %>%
adorn_totals("row", na.rm = TRUE) %>%
kable(caption = "Beneficiary frequencies by delivery modalities and frequency of distribution", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
footnote(general = "Beneficiary frequencies reported without a delivery modality specified have been excluded",
general_title = "")
