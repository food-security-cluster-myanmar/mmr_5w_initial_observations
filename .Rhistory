new_value_hhd >= 100 ~ ">=$100",
TRUE ~ NA_character_)) %>%
filter(!is.na(usd_hhd_bin)) %>%
ggplot(aes(x = usd_hhd_bin, y = u_ben))+
geom_col() +
theme(axis.text.x = element_text(angle = 30))
fsc %>%
ggplot(aes(x = u_ben, y = activity)) +
geom_col()
fsc <- read_excel(
"FSC 5W 2021 - GEOADMINS_final 19_Jan to Dec 2021 IM Combined_Draft_28012022.xlsx",
sheet = "FSC 5W Activites",
skip = 5) %>%
clean_names() %>%
select(-addendum_indicators) %>%
rename_all(~str_replace_all(., "^number_of_", "")) %>%
rename_all(~str_replace_all(., "^number_", "")) %>%
rename(admin5_pcode = admin3_pcode,
admin3_pcode = admin2_pcode,
beneficiaries = reached_beneficiaries,
households = reached_households,
beneficiary_type = beneficiaries_type) %>%
mutate(frequency = replace(frequency, frequency == "N/A", NA),
industrial_zones = replace(industrial_zones, industrial_zones == "No", NA)) %>%
mutate(location = case_when(!is.na(camp) ~ camp,
!is.na(industrial_zones) ~ industrial_zones,
!is.na(village_ward_town) ~ village_ward_town),
location_type = case_when(!is.na(camp) ~ "camp",
!is.na(industrial_zones) ~ "industrial_zones",
!is.na(village_ward_town) ~ "village_ward_town")) %>%
mutate(total_value_mmk = value_per_household * households,
date = my(month_of_implementation),
u_ben = ifelse(unique_beneficiaries == "Yes", beneficiaries, 0)) %>%
mutate(state = fct_recode(state,
"Kachin" = "kachin"),
frequency = recode(frequency, "monthly" = "Monthly"),
township = recode(township, "kyaukme" = "Kyaukme")) %>%
mutate(new_value_hhd = total_value_usd / households,
new_value_person = total_value_usd / beneficiaries,
usd_hhd_bin =
case_when(new_value_hhd < 10 ~ "<$10",
new_value_hhd >= 10 & new_value_hhd < 20 ~ ">=$10_<$20",
new_value_hhd >= 20 & new_value_hhd < 30 ~ ">=$20_<$30",
new_value_hhd >= 30 & new_value_hhd < 40 ~ ">=$30_<$40",
new_value_hhd >= 40 & new_value_hhd < 50 ~ ">=$40_<$50",
new_value_hhd >= 50 & new_value_hhd < 60 ~ ">=$50_<$60",
new_value_hhd >= 60 & new_value_hhd < 70 ~ ">=$60_<$70",
new_value_hhd >= 70 & new_value_hhd < 80 ~ ">=$70_<$80",
new_value_hhd >= 80 & new_value_hhd < 90 ~ ">=$80_<$90",
new_value_hhd >= 90 & new_value_hhd < 100 ~ ">=$90_<$100",
new_value_hhd >= 100 ~ ">=$100",
TRUE ~ NA_character_),
usd_hhd_bin = fct_relevel(usd_hhd_bin, c("<$10", ">=$10_<$20", ">=$20_<$30",
">=$30_<$40", ">=$40_<$50",">=$50_<$60",
">=$60_<$70", ">=$70_<$80",
">=$80_<$90",">=$90_<$100",">=$100")))
fsc %>%
ggplot(aes(x = u_ben, y = activity)) +
geom_col()
fsc %>%
mutate(activity = str_remove(activity, 40)) %>%
ggplot(aes(x = u_ben, y = activity)) +
geom_col()
fsc %>%
mutate(activity = str_sub(activity, 40)) %>%
ggplot(aes(x = u_ben, y = activity)) +
geom_col()
fsc %>%
mutate(activity = str_sub(activity, 0, 40)) %>%
ggplot(aes(x = u_ben, y = activity)) +
geom_col()
fsc %>%
mutate(activity = fct_reorder(activity, u_ben, .desc = TRUE)) %>%
mutate(activity = str_sub(activity, 0, 40)) %>%
ggplot(aes(x = u_ben, y = activity)) +
geom_col()
fsc %>%
mutate(activity = str_sub(activity, 0, 40)) %>%
mutate(activity = fct_reorder(activity, u_ben)) %>%
ggplot(aes(x = u_ben, y = activity)) +
geom_col()
fsc %>%
mutate(activity = str_sub(activity, 0, 40)) %>%
mutate(activity = fct_reorder(activity, u_ben)) %>%
ggplot(aes(x = u_ben, y = fct_reorder(activity, u_ben))) +
geom_col()
fsc %>%
mutate(activity = str_sub(activity, 0, 40)) %>%
mutate(activity = fct_reorder(activity, u_ben)) %>%
ggplot(aes(x = u_ben, y = reorder(activity, u_ben))) +
geom_col()
fsc %>%
group_by(activity) %>%
summarise(u_ben = sum(u_ben)) %>%
mutate(activity = str_sub(activity, 0, 40)) %>%
mutate(activity = fct_reorder(activity, u_ben)) %>%
ggplot(aes(x = u_ben, y = u_ben)) +
geom_col()
fsc %>%
group_by(activity) %>%
summarise(u_ben = sum(u_ben)) %>%
mutate(activity = str_sub(activity, 0, 40)) %>%
mutate(activity = fct_reorder(activity, u_ben)) %>%
ggplot(aes(x = u_ben, y = activity)) +
geom_col()
fsc %>%
group_by(activity) %>%
summarise(u_ben = sum(u_ben, na.rm = TRUE)) %>%
mutate(activity = str_sub(activity, 0, 40)) %>%
mutate(activity = fct_reorder(activity, u_ben)) %>%
ggplot(aes(x = u_ben, y = activity)) +
geom_col()
fsc %>%
group_by(activity) %>%
summarise(u_ben = sum(u_ben, na.rm = TRUE))
fsc %>% count(implementing_partner_type)
fsc %>%
filter(!is.na(implementing_partner_type)) %>%
group_by(implementing_partner_type) %>%
summarise(u_ben = sum(u_ben)) %>%
ggplot(aes(x = u_ben, y = implementing_partner_type)) +
geom_col()
fsc %>%
filter(!is.na(implementing_partner_type)) %>%
group_by(implementing_partner_type) %>%
summarise(u_ben = sum(u_ben, na.rm = TRUE)) %>%
ggplot(aes(x = u_ben, y = implementing_partner_type)) +
geom_col()
fsc %>%
filter(!is.na(implementing_partner_type)) %>%
group_by(implementing_partner_type) %>%
mutate(implementing_partner_type =
fct_relevel(implementing_partner_type, c("NNGO", "INGO", "UN"))) %>%
summarise(u_ben = sum(u_ben, na.rm = TRUE)) %>%
ggplot(aes(x = u_ben, y = implementing_partner_type)) +
geom_col()
fsc %>%
filter(!is.na(implementing_partner_type)) %>%
group_by(implementing_partner_type) %>%
summarise(u_ben = sum(u_ben, na.rm = TRUE)) %>%
mutate(implementing_partner_type =
fct_relevel(implementing_partner_type, c("NNGO", "INGO", "UN"))) %>%
ggplot(aes(x = u_ben, y = implementing_partner_type)) +
geom_col()
fsc %>%
filter(!is.na(implementing_partner_type)) %>%
group_by(implementing_partner_type) %>%
summarise(u_ben = sum(u_ben, na.rm = TRUE)) %>%
mutate(implementing_partner_type =
fct_relevel(implementing_partner_type, c("UN", "INGO", "NNGO"))) %>%
ggplot(aes(x = u_ben, y = implementing_partner_type)) +
geom_col()
fsc %>%
filter(!is.na(implementing_partner_type)) %>%
group_by(implementing_partner_type) %>%
summarise(u_ben = sum(u_ben, na.rm = TRUE)) %>%
#mutate(implementing_partner_type =
#         fct_relevel(implementing_partner_type, c("UN", "INGO", "NNGO"))) %>%
ggplot(aes(x = u_ben, y = implementing_partner_type)) +
geom_col()
fsc %>% filter(!is.na(implementing_partners)) %>%
group_by(implementing_partners) %>%
summarise(u_ben = sum(u_ben, na.rm = TRUE)) %>%
ggplot(aes(x = u_ben, y = implementing_partners)) +
geom_col()
fsc %>% filter(!is.na(implementing_partners)) %>%
group_by(implementing_partners) %>%
summarise(u_ben = sum(u_ben, na.rm = TRUE)) %>%
head(20) %>%
ggplot(aes(x = u_ben, y = implementing_partners)) +
geom_col()
fsc %>% filter(!is.na(implementing_partners)) %>%
group_by(implementing_partners) %>%
summarise(u_ben = sum(u_ben, na.rm = TRUE)) %>%
head(20) %>%
mutate(implementing_partners = fct_rev(implementing_partners)) %>%
ggplot(aes(x = u_ben, y = implementing_partners)) +
geom_col()
fsc %>% count(beneficiary_type)
fsc %>% filter(beneficiary_type == "Internally Displaced")
fsc %>% count(beneficiary_type)
fsc %>% filter(beneficiary_type == "Host/local Community")
fsc %>% count(beneficiary_type)
fsc %>% filter(beneficiary_type == "Non-displaced stateless people in Rakhine")
fsc %>% count(beneficiary_type)
fsc %>% filter(beneficiary_type == "Non-displaced stateless people in Rakhine")
fsc %>% count(beneficiary_type)
fsc %>% mutate(beneficiaries_type = str_trim(beneficiaries_type)) %>%  filter(beneficiary_type == "Non-displaced stateless people in Rakhine")
fsc %>% mutate(beneficiary_type = str_trim(beneficiary_type)) %>%
filter(beneficiary_type == "Non-displaced stateless people in Rakhine")
fsc <- read_excel(
"FSC 5W 2021 - GEOADMINS_final 19_Jan to Dec 2021 IM Combined_Draft_28012022.xlsx",
sheet = "FSC 5W Activites",
skip = 5) %>%
clean_names() %>%
select(-addendum_indicators) %>%
rename_all(~str_replace_all(., "^number_of_", "")) %>%
rename_all(~str_replace_all(., "^number_", "")) %>%
rename(admin5_pcode = admin3_pcode,
admin3_pcode = admin2_pcode,
beneficiaries = reached_beneficiaries,
households = reached_households,
beneficiary_type = beneficiaries_type) %>%
mutate(frequency = replace(frequency, frequency == "N/A", NA),
industrial_zones = replace(industrial_zones, industrial_zones == "No", NA)) %>%
mutate(location = case_when(!is.na(camp) ~ camp,
!is.na(industrial_zones) ~ industrial_zones,
!is.na(village_ward_town) ~ village_ward_town),
location_type = case_when(!is.na(camp) ~ "camp",
!is.na(industrial_zones) ~ "industrial_zones",
!is.na(village_ward_town) ~ "village_ward_town")) %>%
mutate(total_value_mmk = value_per_household * households,
date = my(month_of_implementation),
u_ben = ifelse(unique_beneficiaries == "Yes", beneficiaries, 0)) %>%
mutate(state = fct_recode(state,
"Kachin" = "kachin"),
frequency = recode(frequency, "monthly" = "Monthly"),
township = recode(township, "kyaukme" = "Kyaukme")) %>%
mutate(new_value_hhd = total_value_usd / households,
new_value_person = total_value_usd / beneficiaries,
usd_hhd_bin =
case_when(new_value_hhd < 10 ~ "<$10",
new_value_hhd >= 10 & new_value_hhd < 20 ~ ">=$10_<$20",
new_value_hhd >= 20 & new_value_hhd < 30 ~ ">=$20_<$30",
new_value_hhd >= 30 & new_value_hhd < 40 ~ ">=$30_<$40",
new_value_hhd >= 40 & new_value_hhd < 50 ~ ">=$40_<$50",
new_value_hhd >= 50 & new_value_hhd < 60 ~ ">=$50_<$60",
new_value_hhd >= 60 & new_value_hhd < 70 ~ ">=$60_<$70",
new_value_hhd >= 70 & new_value_hhd < 80 ~ ">=$70_<$80",
new_value_hhd >= 80 & new_value_hhd < 90 ~ ">=$80_<$90",
new_value_hhd >= 90 & new_value_hhd < 100 ~ ">=$90_<$100",
new_value_hhd >= 100 ~ ">=$100",
TRUE ~ NA_character_),
usd_hhd_bin = fct_relevel(usd_hhd_bin, c("<$10", ">=$10_<$20", ">=$20_<$30",
">=$30_<$40", ">=$40_<$50",">=$50_<$60",
">=$60_<$70", ">=$70_<$80",
">=$80_<$90",">=$90_<$100",">=$100"))) %>%
mutate(hrp_indicator_num =
recode(hrp_indicator,
"Number of people who received food and/or cash assistance" = "1",
"Number of people who received agriculture and other livelihood support, contributing to household food security" = "2")) %>%
mutate(beneficiary_type = str_trim(beneficiary_type)) %>%
mutate(beneficiary_type = as.character(fct_recode(beneficiary_type,
"Rakhine stateless" = "Non-displaced stateless people in Rakhine")))
fsc <- read_excel(
"FSC 5W 2021 - GEOADMINS_final 19_Jan to Dec 2021 IM Combined_Draft_28012022.xlsx",
sheet = "FSC 5W Activites",
skip = 5) %>%
clean_names() %>%
select(-addendum_indicators) %>%
rename_all(~str_replace_all(., "^number_of_", "")) %>%
rename_all(~str_replace_all(., "^number_", "")) %>%
rename(admin5_pcode = admin3_pcode,
admin3_pcode = admin2_pcode,
beneficiaries = reached_beneficiaries,
households = reached_households,
beneficiary_type = beneficiaries_type) %>%
mutate(frequency = replace(frequency, frequency == "N/A", NA),
industrial_zones = replace(industrial_zones, industrial_zones == "No", NA)) %>%
mutate(location = case_when(!is.na(camp) ~ camp,
!is.na(industrial_zones) ~ industrial_zones,
!is.na(village_ward_town) ~ village_ward_town),
location_type = case_when(!is.na(camp) ~ "camp",
!is.na(industrial_zones) ~ "industrial_zones",
!is.na(village_ward_town) ~ "village_ward_town")) %>%
mutate(total_value_mmk = value_per_household * households,
date = my(month_of_implementation),
u_ben = ifelse(unique_beneficiaries == "Yes", beneficiaries, 0)) %>%
mutate(state = fct_recode(state,
"Kachin" = "kachin"),
frequency = recode(frequency, "monthly" = "Monthly"),
township = recode(township, "kyaukme" = "Kyaukme")) %>%
mutate(new_value_hhd = total_value_usd / households,
new_value_person = total_value_usd / beneficiaries,
usd_hhd_bin =
case_when(new_value_hhd < 10 ~ "<$10",
new_value_hhd >= 10 & new_value_hhd < 20 ~ ">=$10_<$20",
new_value_hhd >= 20 & new_value_hhd < 30 ~ ">=$20_<$30",
new_value_hhd >= 30 & new_value_hhd < 40 ~ ">=$30_<$40",
new_value_hhd >= 40 & new_value_hhd < 50 ~ ">=$40_<$50",
new_value_hhd >= 50 & new_value_hhd < 60 ~ ">=$50_<$60",
new_value_hhd >= 60 & new_value_hhd < 70 ~ ">=$60_<$70",
new_value_hhd >= 70 & new_value_hhd < 80 ~ ">=$70_<$80",
new_value_hhd >= 80 & new_value_hhd < 90 ~ ">=$80_<$90",
new_value_hhd >= 90 & new_value_hhd < 100 ~ ">=$90_<$100",
new_value_hhd >= 100 ~ ">=$100",
TRUE ~ NA_character_),
usd_hhd_bin = fct_relevel(usd_hhd_bin, c("<$10", ">=$10_<$20", ">=$20_<$30",
">=$30_<$40", ">=$40_<$50",">=$50_<$60",
">=$60_<$70", ">=$70_<$80",
">=$80_<$90",">=$90_<$100",">=$100"))) %>%
mutate(hrp_indicator_num =
recode(hrp_indicator,
"Number of people who received food and/or cash assistance" = "1",
"Number of people who received agriculture and other livelihood support, contributing to household food security" = "2")) %>%
mutate(beneficiary_type = str_trim(beneficiary_type)) %>%
mutate(beneficiary_type = as.character(fct_recode(beneficiary_type,
"Rakhine stateless" = "Non-displaced stateless people in Rakhine"))) %>%
mutate(activity = recode(activity,
"Provide monthly food baskets through in-kind assistance to acutely food insecure population in rural areas" =
"Provide monthly food baskets",
"Provide technical training (agriculture, livestock breeding, livelihood)" = "Provide technical training",
"Provide support for Income Generating Activities" = "Provide support for income generation",
"Provide monthly cash-based transfers to acutely food insecure population in rural areas" =
"Provide monthly cash-based transfers",
"Cash for Work / Food for Assets activities" = "Cash for Work / Food for Assets",
"Provide fishery kits (in-kind / CBT)" = "Provide fishery kits",
"Provide crops & vegetables kits (in-kind / CBT)" = "Provide crops & vegetables kits",
"Provide livestock kits (in-kind / CBT)" = "Provide livestock kits"))
fsc %>% count(implementing_partner_type)
fsc %>% count(implementing_partners, implementing_partner_type, sort = TRUE)
fsc %>% filter(is.na(implementing_partner_type)) %>%
count(implementing_partners, sort = TRUE)
fsc %>% count(covid_19_response)
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(fuzzyjoin)
library(scales)
library(magrittr)
library(sf)
library(bookdown)
library(patchwork)
library(plotly)
library(kableExtra)
library(DT)
library(data.table)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
# reading in townships from geoadmins
townships <- read_excel("FSC 5W 2021 - GEOADMINS_final 19.xlsx",
sheet = "GEOADMINS") %>%
clean_names() %>%
select(admin1pcode_4:admin3pcode) %>%
rename(admin1_pcode = admin1pcode_4,
admin3_pcode = admin3pcode,
state_name   = state_5,
township_name  = county) %>%
remove_empty()
# locations dataset
locations <- bind_rows(
read_excel("FSC 5W 2021 - GEOADMINS_final 19.xlsx", # payams
sheet = "GEOADMINS") %>%
clean_names() %>%
select(state_name:payam_code) %>%
rename(admin1_pcode = state_code_12,
township_name = county_name,
admin3_pcode = county_code,
location = payam_name) %>%
remove_empty() %>%
mutate(location_type = paste0("payam")),
read_excel("FSC 5W 2021 - GEOADMINS_final 19.xlsx", # camps
sheet = "GEOADMINS") %>%
clean_names() %>%
select(county_name1:p_code_camp) %>%
rename(township_name = county_name1,
admin3_pcode = state_code_23,
location = camps,
camp_pcode = p_code_camp) %>%
remove_empty() %>%
mutate(location_type = paste0("camp")) %>%
left_join(townships %>% select(state_name, admin1_pcode, admin3_pcode),
by = c("admin3_pcode")) %>%
relocate(admin1_pcode) %>%
relocate(state_name),
read_excel("FSC 5W 2021 - GEOADMINS_final 19.xlsx", # industrial zones
sheet = "GEOADMINS") %>%
clean_names() %>%
select(state_28:industrial_zones) %>%
rename(state_name = state_28,
admin1_pcode = admin1pcode_29,
location = industrial_zones) %>%
remove_empty() %>%
regex_left_join(townships %>% select(township_name, admin3_pcode),
by = c("location" = "township_name")) %>%
# replacing the NAs with 0s so the filter doesn't drop them
replace_na(list(township_name = 0, admin3_pcode = 0, admin1_pcode = 0)) %>%
filter(admin3_pcode != "MMR013040") %>% # removing all the matches between Hlaingtharya and Hlaing
filter(admin3_pcode != "MMR011006") %>% # removing all the matches between Yenangyaung and Ye
mutate(location_type = paste0("industrial_zone"))
)%>%
mutate(location_code = case_when(location_type == "camp" ~ camp_pcode,
location_type == "payam" ~ payam_code,
location_type == "industrial_zone" ~ NA_character_)) %>%
mutate(locations_fuzzy = str_replace_all(location, "[[:punct:]]", ""))
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(fuzzyjoin)
library(scales)
library(magrittr)
library(sf)
library(bookdown)
library(patchwork)
library(plotly)
library(kableExtra)
library(DT)
library(data.table)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
# reading in townships from geoadmins
townships <- read_excel("FSC 5W 2021 - GEOADMINS_final 19.xlsx",
sheet = "GEOADMINS") %>%
clean_names() %>%
select(admin1pcode_4:admin3pcode) %>%
rename(admin1_pcode = admin1pcode_4,
admin3_pcode = admin3pcode,
state_name   = state_5,
township_name  = county) %>%
remove_empty()
# locations dataset
locations <- bind_rows(
read_excel("FSC 5W 2021 - GEOADMINS_final 19.xlsx", # payams
sheet = "GEOADMINS") %>%
clean_names() %>%
select(state_name:payam_code) %>%
rename(admin1_pcode = state_code_12,
township_name = county_name,
admin3_pcode = county_code,
location = payam_name) %>%
remove_empty() %>%
mutate(location_type = paste0("payam")),
read_excel("FSC 5W 2021 - GEOADMINS_final 19.xlsx", # camps
sheet = "GEOADMINS") %>%
clean_names() %>%
select(county_name1:p_code_camp) %>%
rename(township_name = county_name1,
admin3_pcode = state_code_23,
location = camps,
camp_pcode = p_code_camp) %>%
remove_empty() %>%
mutate(location_type = paste0("camp")) %>%
left_join(townships %>% select(state_name, admin1_pcode, admin3_pcode),
by = c("admin3_pcode")) %>%
relocate(admin1_pcode) %>%
relocate(state_name),
read_excel("FSC 5W 2021 - GEOADMINS_final 19.xlsx", # industrial zones
sheet = "GEOADMINS") %>%
clean_names() %>%
select(state_28:industrial_zones) %>%
rename(state_name = state_28,
admin1_pcode = admin1pcode_29,
location = industrial_zones) %>%
remove_empty() %>%
regex_left_join(townships %>% select(township_name, admin3_pcode),
by = c("location" = "township_name")) %>%
# replacing the NAs with 0s so the filter doesn't drop them
replace_na(list(township_name = "0", admin3_pcode = 0, admin1_pcode = 0)) %>%
filter(admin3_pcode != "MMR013040") %>% # removing all the matches between Hlaingtharya and Hlaing
filter(admin3_pcode != "MMR011006") %>% # removing all the matches between Yenangyaung and Ye
mutate(location_type = paste0("industrial_zone"))
)%>%
mutate(location_code = case_when(location_type == "camp" ~ camp_pcode,
location_type == "payam" ~ payam_code,
location_type == "industrial_zone" ~ NA_character_)) %>%
mutate(locations_fuzzy = str_replace_all(location, "[[:punct:]]", ""))
