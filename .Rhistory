locations_fuzzy = tolower(locations_fuzzy),
location = tolower(location)) %>%
mutate(total_value_mmk = value_per_household * households,
date            = my(month_of_implementation),
u_ben           = ifelse(unique_beneficiaries == "Yes", beneficiaries, 0)) %>%
mutate(state = as.character(fct_recode(state,
"Kachin" = "kachin")),
frequency = recode(frequency, "monthly" = "Monthly"),
township = recode(township, "kyaukme" = "Kyaukme")) %>%
mutate(new_value_hhd = total_value_usd / households,
new_value_person = total_value_usd / beneficiaries,
usd_hhd_bin =
case_when(new_value_hhd < 10 ~ "<$10",
new_value_hhd >= 10 & new_value_hhd < 20 ~ ">=$10_<$20",
new_value_hhd >= 20 & new_value_hhd < 40 ~ ">=$20_<$40",
new_value_hhd >= 40 & new_value_hhd < 60 ~ ">=$40_<$60",
new_value_hhd >= 60 & new_value_hhd < 80 ~ ">=$60_<$80",
new_value_hhd >= 80 & new_value_hhd < 100 ~ ">=$80_<$100",
new_value_hhd >= 100 ~ ">=$100",
TRUE ~ NA_character_),
usd_hhd_bin = fct_relevel(usd_hhd_bin, c("<$10", ">=$10_<$20", ">=$20_<$40", ">=$40_<$60",
">=$60_<$80", ">=$80_<$100", ">=$100"))) %>%
mutate(hrp_indicator =
recode(hrp_indicator,
"Number of people who received food and/or cash assistance" =
"1.Number of people who received food and/or cash assistance",
"Number of people who received agriculture and other livelihood support, contributing to household food security" =
"2.Number of people who received agriculture and other livelihood support")) %>%
mutate(beneficiary_type = str_trim(beneficiary_type)) %>%
mutate(beneficiary_type = as.character(fct_recode(beneficiary_type,
"Rakhine stateless" = "Non-displaced stateless people in Rakhine"))) %>%
mutate(activity = recode(activity,
"Provide monthly food baskets through in-kind assistance to acutely food insecure population in rural areas" =
"Provide monthly food baskets",
"Provide technical training (agriculture, livestock breeding, livelihood)" = "Provide technical training",
"Provide support for Income Generating Activities" = "Provide support for income generation",
"Provide monthly cash-based transfers to acutely food insecure population in rural areas" =
"Provide monthly cash-based transfers",
"Cash for Work / Food for Assets activities" = "Cash for Work / Food for Assets",
"Provide fishery kits (in-kind / CBT)" = "Provide fishery kits",
"Provide crops & vegetables kits (in-kind / CBT)" = "Provide crops & vegetables kits",
"Provide livestock kits (in-kind / CBT)" = "Provide livestock kits")) %>%
mutate(implementing_partners = recode(implementing_partners,
"Save the children" = "Save the Children")) %>%
mutate(implementing_partner_type =
ifelse(implementing_partners %in% c("Kaw Lah Foundation", "Hakha Baptist Association (HBA)", "Arkan Research and Watch",
"Hlaing Development Network", "Mangrove Service Network (MSN)", "Kyal Sin May",
"Swan Saung Shin", "Sein Lei Ayeyar"), "NNGO", implementing_partner_type),
implementing_partner_type =
ifelse(implementing_partners %in% c("Single Touch Point Company Limited (STP)", "Neo Prospect Company Limited"),
"other", implementing_partner_type),
implementing_partner_type = ifelse(implementing_partners == "Helen Keller International", "INGO", implementing_partner_type)) %>%
mutate(hrp_ierp = case_when(admin3_pcode %in% hrp2021_adm3_list ~ "hrp",
date > "2021-05-01" ~ "ierp",
TRUE ~ "non_hrp")) %>%
mutate(covid_19_response = recode(covid_19_response,
"No" = "no", "Yes" = "yes"),
covid_19_response = replace_na(covid_19_response, "no"))
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
regex_left_join(camp_points %>%
select(camp_name_low, p_code), by = c("location" = "camp_name_low"))
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
regex_left_join(camp_points %>%
select(camp_name_low, p_code), by = c("location" = "camp_name_low"))  %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name_low, .after = location)
# fsc camps not in camp list
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
regex_left_join(camp_points %>%
select(camp_name_low, p_code), by = c("location" = "camp_name_low"))  %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name_low, .after = location) %>%
filter(is.na(camp_name_low))
# fsc camps not in camp list
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
regex_left_join(camp_points %>%
select(camp_name_low, p_code), by = c("location" = "camp_name_low"))  %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name_low, .after = location) %>%
filter(is.na(camp_name_low)) %>% arrange(admin3_pcode)
camp_points %>%  filter(township == "Myitkyina")
camp_points
camp_points %>%  filter(township == "Myitkyina")
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
left_join(camp_points %>%
select(camp_name_low, p_code), by = c("location" = "camp_name_low"))  %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name_low, .after = location) %>%
filter(is.na(camp_name_low)) %>% arrange(admin3_pcode)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
left_join(camp_points %>%
select(camp_name_low, camp_name, p_code), by = c("location" = "camp_name_low"))  %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location) %>%
filter(is.na(camp_name)) %>% arrange(admin3_pcode)
camp_points %>%  filter(township == "Waingmaw")
# partial_join function
partial_join <- function(x, y, by_x, pattern_y) {
idx_x <- sapply(y[[pattern_y]], grep, x[[by_x]])
idx_y <- sapply(seq_along(idx_x), function(i) rep(i, length(idx_x[[i]])))
df <- dplyr::bind_cols(x[unlist(idx_x), , drop = F],
y[unlist(idx_y), , drop = F])
return(df)
}
# partial_join function
partial_join <- function(x, y, by_x, pattern_y){
idx_x <- sapply(y[[pattern_y]], grep, x[[by_x]])
idx_y <- sapply(seq_along(idx_x), function(i) rep(i, length(idx_x[[i]])))
df <- dplyr::bind_cols(x[unlist(idx_x), , drop = F],
y[unlist(idx_y), , drop = F])
return(df)
}
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
partial_join(x = ., y =camp_points %>%
select(camp_name_low, camp_name, p_code), by_x = location, pattern_y = camp_name_low)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
partial_join(x = ., y =camp_points %>%
select(camp_name_low, camp_name, p_code), by_x = "location", pattern_y = "camp_name_low")
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
partial_join(x = ., y =camp_points %>%
select(camp_name_low, camp_name, p_code), by_x = "location", pattern_y = "camp_name_low") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location) %>%
filter(is.na(camp_name)) %>% arrange(admin3_pcode)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
partial_join(x = ., y =camp_points %>%
select(camp_name_low, camp_name, p_code), by_x = "location", pattern_y = "camp_name_low") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
partial_join(x = ., y =camp_points %>%
select(camp_name_low, camp_name, p_code), by_x = "location", pattern_y = "camp_name_low") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location) %>%
arrange(admin3_pcode)
# fsc camps not in camp list
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
regex_left_join(camp_points %>%
select(camp_name_low, p_code), by = c("location" = "camp_name_low"))  %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name_low, .after = location) %>%
filter(!is.na(camp_name_low)) %>% arrange(admin3_pcode)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
partial_join(x = ., y =camp_points %>%
select(camp_name_low, camp_name, p_code), by_x = "location", pattern_y = "camp_name_low") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location) %>%
arrange(admin3_pcode)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, p_code), by = c("location" = "camp_name_low"),
ignore_case = TRUE, distance_col = "distance") %>%
glimpse(camp_points)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, p_code), by = c("location" = "camp_name_low"),
ignore_case = TRUE, distance_col = "distance") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location) %>%
arrange(admin3_pcode)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code), by = c("location" = "camp_name_low"),
ignore_case = TRUE, distance_col = "distance") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location) %>%
arrange(admin3_pcode)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("location" = "camp_name_low",
"admin3_pcode" = "admin3_pcode"),
ignore_case = TRUE, distance_col = "distance") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location) %>%
arrange(admin3_pcode)
glimpse(camp_points)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("location" = "camp_name_low","admin3_pcode"),
ignore_case = TRUE, distance_col = "distance") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location) %>%
arrange(admin3_pcode)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("location" = "camp_name_low" & "admin3_pcode"),
ignore_case = TRUE, distance_col = "distance") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location) %>%
arrange(admin3_pcode)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("admin3_pcode", "location" = "camp_name_low"),
ignore_case = TRUE, distance_col = "distance") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location) %>%
arrange(admin3_pcode)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop")
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("location" = "camp_name_low"),
ignore_case = TRUE, distance_col = "distance") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location) %>%
arrange(admin3_pcode)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("location" = "camp_name_low"), ignore_case = TRUE, distance_col = "distance") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location) %>%
arrange(admin3_pcode)
camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("location" = "camp_name_low", "admin3_pcode"), ignore_case = TRUE, distance_col = "distance") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name, .after = location)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("location" = "camp_name_low", "admin3_pcode"), ignore_case = TRUE, distance_col = "distance") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name_low, .after = location)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("location" = "camp_name_low", "admin3_pcode"), ignore_case = TRUE, distance_col = "distance") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name_low, .after = location) %>%
group_by(location) %>%
slice(which.min(location.distance))
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("location" = "camp_name_low", "admin3_pcode"), ignore_case = TRUE)
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("location" = "camp_name_low", "admin3_pcode"), ignore_case = TRUE, distance_col = "distance") %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name_low, .after = location) %>%
group_by(location) %>%
slice(which.min(location.distance))
fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("location" = "camp_name_low", "admin3_pcode"), ignore_case = TRUE, distance_col = "distance") %>%
select(-distance) %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name_low, .after = location) %>%
group_by(location) %>%
slice(which.min(location.distance))
# of all the options, stringdist_left_join performs the best
camp_joined <- fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop") %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("location" = "camp_name_low", "admin3_pcode"), ignore_case = TRUE, distance_col = "distance") %>%
select(-distance) %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name_low, .after = location) %>%
group_by(location) %>%
slice(which.min(location.distance))
# fsc camps df
fsc_camps <- fsc %>%
mutate(admin5_pcode = as.character(admin5_pcode)) %>%
filter(unique_beneficiaries == "Yes" & location_type == "camp") %>%
group_by(location, admin5_pcode, admin3_pcode, state, township) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity), .groups = "drop")
fsc_camps %>%
anti_join(camps_joined %>%
select(location), by = "location")
# of all the options, stringdist_left_join performs the best
camps_joined <- fsc_camps %>%
stringdist_left_join(camp_points %>%
select(camp_name_low, camp_name, p_code, admin3_pcode),
by = c("location" = "camp_name_low", "admin3_pcode"), ignore_case = TRUE, distance_col = "distance") %>%
select(-distance) %>%
relocate(p_code, .after = admin5_pcode) %>%
relocate(camp_name_low, .after = location) %>%
group_by(location) %>%
slice(which.min(location.distance))
fsc_camps %>%
anti_join(camps_joined %>%
select(location), by = "location")
fsc_camps %>%
anti_join(camps_joined %>%
select(location), by = "location") %>%
ggplot(aes(x = beneficiaries, fill = state)) +
geom_histogram()
fsc_camps %>%
anti_join(camps_joined %>%
select(location), by = "location") %>%
ggplot(aes(x = beneficiaries, fill = state)) +
geom_histogram() +
scale_x_continuous(trans = "log10")
fsc_camps %>%
anti_join(camps_joined %>%
select(location), by = "location") %>%
ggplot(aes(x = beneficiaries, fill = state)) +
geom_histogram() +
scale_x_continuous(trans = "log10") +
labs(x = "Number of FSC beneficiaries",
y = "Number of camps",
title = "Histogram of FSC-assisted camps not in Shelter/NFI/CCCM list")
fsc_camps %>%
anti_join(camps_joined %>%
select(location), by = "location") %>%
ggplot(aes(x = beneficiaries, fill = state)) +
geom_histogram() +
scale_x_continuous(trans = "log10", labels = comma) +
labs(x = "Number of FSC beneficiaries",
y = "Number of camps",
title = "Histogram of FSC-assisted camps not in Shelter/NFI/CCCM list")
fsc_camps %>%
anti_join(camps_joined %>%
select(location), by = "location") %>%
ggplot(aes(x = beneficiaries, fill = state)) +
geom_histogram() +
scale_x_continuous(trans = "log10", labels = comma_format(accuracy = 1)) +
labs(x = "Number of FSC beneficiaries",
y = "Number of camps",
title = "Histogram of FSC-assisted camps not in Shelter/NFI/CCCM list")
