}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
fsc %>%
filter(township == "Hseni" | township = "Tangyan" | township == "Muse" | township == "Hpapun")
fsc %>%
filter(township == "Hseni" | township == "Tangyan" | township == "Muse" | township == "Hpapun")
pin
pin %>% filter(target_2021 > 0)
fsc %>%
filter(township == "Hseni" | township == "Hsipaw" | township == "Muse" | township == "Hpapun" | township == "Kyethi")
fsc %>%
filter(township == "Hseni" | township == "Hsipaw" | township == "Muse" | township == "Hpapun" | township == "Kyethi") %>%
group_by(township, activity) %>%
summarise(beneficiaries = sum(beneficiaries))
pin %>%
filter(target_2021 > 0) %>%
select(admin3_pcode, state, township, target_2021) %>%
left_join(fsc %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode")
ben %>%
group_by(admin3_pcode, township, state) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
left_join(pin %>% select(admin3_pcode, target = target_2021), by = "admin3_pcode") %>%
mutate(`%_of_ben` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2),
`%_of_target` = ifelse(is.infinite(target / sum(target, na.rm = TRUE) * 100), NA_real_, target / sum(target, na.rm = TRUE) * 100),
`%_of_target` = round(`%_of_target`, digits = 2),
`%reached` = ifelse(is.infinite(beneficiaries / target * 100), NA_real_, beneficiaries / target * 100),
`%reached` = round(`%reached`, digits = 2)) %>%
select(-admin3_pcode) %>%
relocate(`%_of_ben`, .after = beneficiaries) %>%
relocate(state, .after = township) %>%
arrange(desc(beneficiaries))
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021)
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021) %>%
replace(is.na(.), 0) %>%
mutate(pc_reached = ifelse(pc_reached > 500, 500, pc_reached)) %>%
ggplot(aes(x = pc_reached)) +
geom_histogram(bins = 15) +
scale_x_continuous(breaks = seq(0, 500, by = 100)) +
scale_y_continuous(breaks = seq(0, 14, by = 2)) +
labs(x = "% of 2021 HRP target reached",
y = "Number of townships",
title = "Number of townships reached by percentage of 2021 HRP target reached",
subtitle = "Values above 500% have been lumped together at 500%")
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021) %>%
replace(is.na(.), 0
pin %>%
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021) %>%
replace(is.na(.), 0)
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>%
mutate(pc_reached = ifelse(pc_reached > 500, 500, pc_reached)) %>%
ggplot(aes(x = pc_reached)) +
geom_histogram(bins = 15) +
scale_x_continuous(breaks = seq(0, 500, by = 100)) +
scale_y_continuous(breaks = seq(0, 14, by = 2)) +
labs(x = "% of 2021 HRP target reached",
y = "Number of townships",
title = "Number of townships reached by percentage of 2021 HRP target reached",
subtitle = "Values above 500% have been lumped together at 500%")
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>%
mutate(pc_reached = ifelse(pc_reached > 500, 500, pc_reached)) %>%
ggplot(aes(x = pc_reached)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(0, 500, by = 100)) +
scale_y_continuous(breaks = seq(0, 14, by = 2)) +
labs(x = "% of 2021 HRP target reached",
y = "Number of townships",
title = "Number of townships reached by percentage of 2021 HRP target reached",
subtitle = "Values above 500% have been lumped together at 500%")
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>% arrange(desc(pc_reached))
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>%
mutate(pc_reached = ifelse(pc_reached > 500, 500, pc_reached)) %>%
ggplot(aes(x = pc_reached)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(0, 500, by = 25)) +
scale_y_continuous(breaks = seq(0, 14, by = 2)) +
labs(x = "% of 2021 HRP target reached",
y = "Number of townships",
title = "Number of townships reached by percentage of 2021 HRP target reached",
subtitle = "Values above 500% have been lumped together at 500%")
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>%
mutate(pc_reached = ifelse(pc_reached > 500, 500, pc_reached)) %>%
ggplot(aes(x = pc_reached)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(0, 500, by = 50)) +
scale_y_continuous(breaks = seq(0, 12, by = 1)) +
labs(x = "% of 2021 HRP target reached",
y = "Number of townships",
title = "Number of townships reached by percentage of 2021 HRP target reached",
subtitle = "Values above 500% have been lumped together at 500%")
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>% arrange(desc(pc_reached))
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>% arrange(desc(pc_reached))
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>% arrange(desc(pc_reached)) %>%
mutate(pc_bin = case_when(pc_reached <= 80 ~ "under80",
pc_reached > 80 & pc_reached <= 100 ~ "80to100",
pc_reached > 100 & pc_reached <= 120 ~ "100to120",
pc_reached > 120 ~ "more120"))
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>% arrange(desc(pc_reached)) %>%
mutate(pc_bin = case_when(pc_reached <= 80 ~ "under80",
pc_reached > 80 & pc_reached <= 100 ~ "80to100",
pc_reached > 100 & pc_reached <= 120 ~ "100to120",
pc_reached > 120 ~ "more120")) %>%
group_by(pc_bin) %>%
summarise(count = n())
target_ben_2021 <- pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0)
sum(target_ben_2021$beneficiaries)
sum(target_ben_2021$beneficiaries) %>% format(big.mark = ",")
sum(target_ben_2021$beneficiaries) / sum(target_ben_2021$target_2021)
round(sum(target_ben_2021$beneficiaries) / sum(target_ben_2021$target_2021) * 100, digits = 2)
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>%
mutate(pc_reached = ifelse(pc_reached > 500, 500, pc_reached)) %>%
ggplot(aes(x = pc_reached)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(0, 500, by = 50)) +
scale_y_continuous(breaks = seq(0, 12, by = 1)) +
labs(x = "% of 2021 HRP target reached",
y = "Number of townships",
title = "Distribution of townships by percentage of 2021 HRP target reached",
subtitle = "Values above 500% have been lumped together at 500%")
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>%
mutate(pc_reached = ifelse(pc_reached > 500, 500, pc_reached)) %>%
ggplot(aes(x = pc_reached)) +
geom_histogram(bins = 25) +
scale_x_continuous(breaks = seq(0, 500, by = 50)) +
scale_y_continuous(breaks = seq(0, 12, by = 1)) +
labs(x = "% of 2021 HRP target reached",
y = "Number of townships",
title = "Distribution of townships by percentage of 2021 HRP target reached",
subtitle = "Values above 500% have been lumped together at 500%")
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>%
mutate(pc_reached = ifelse(pc_reached > 200, 200, pc_reached)) %>%
ggplot(aes(x = pc_reached)) +
geom_histogram(bins = 25) +
scale_x_continuous(breaks = seq(0, 200, by = 20)) +
scale_y_continuous(breaks = seq(0, 12, by = 1)) +
labs(x = "% of 2021 HRP target reached",
y = "Number of townships",
title = "Distribution of townships by percentage of 2021 HRP target reached",
subtitle = "Values above 500% have been lumped together at 500%")
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>%
mutate(pc_reached = ifelse(pc_reached > 200, 200, pc_reached)) %>%
ggplot(aes(x = pc_reached)) +
geom_histogram(bins = 25) +
scale_x_continuous(breaks = seq(0, 200, by = 20)) +
scale_y_continuous(breaks = seq(0, 10, by = 2)) +
labs(x = "% of 2021 HRP target reached",
y = "Number of townships",
title = "Distribution of townships by percentage of 2021 HRP target reached",
subtitle = "Values above 500% have been lumped together at 500%")
pin %>%
select(admin3_pcode, state, township, target_2021) %>%
filter(target_2021 > 0) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries)), by = "admin3_pcode") %>%
mutate(pc_reached = beneficiaries / target_2021 * 100) %>%
replace(is.na(.), 0) %>%
mutate(pc_reached = ifelse(pc_reached > 200, 200, pc_reached)) %>%
ggplot(aes(x = pc_reached)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(0, 200, by = 20)) +
scale_y_continuous(breaks = seq(0, 10, by = 2)) +
labs(x = "% of 2021 HRP target reached",
y = "Number of townships",
title = "Distribution of townships by percentage of 2021 HRP target reached",
subtitle = "Values above 500% have been lumped together at 500%")
fsc %>%
group_by(delivery_modality, frequency) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
filter(beneficiaries > 0)
modalities <- fsc %>%
group_by(delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
filter(beneficiaries > 0)
modalities
modalities <- fsc %>%
group_by(delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
filter(beneficiaries > 0) %>%
pivot_wider(names_from = delivery_modality, values_from = beneficiaries)
modalities <- fsc %>%
group_by(delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
filter(beneficiaries > 0)
filter(modalities, delivery_modality == "In-kind") %>% {sum(.$beneficiaries)}
filter(fsc, delivery_modality == "In-kind" | beneficiaries > 0) %>% {sum(.$beneficiaries)}
filter(fsc, delivery_modality == "In-kind" & beneficiaries > 0) %>% {sum(.$beneficiaries)}
filter(fsc, delivery_modality == "In-kind") %>% {sum(.$beneficiaries)}
filter(fsc, delivery_modality == "In-kind") %>% {sum(.$beneficiaries)} / sum(fsc$beneficiaries)
filter(fsc, delivery_modality == "In-kind") %>% {sum(.$beneficiaries)} / sum(fsc$beneficiaries) * 100 %>% round(digits = 0)
g
filter(fsc, delivery_modality == "In-kind") %>% {sum(.$beneficiaries)} / sum(fsc$beneficiaries) * 100 %>% round(digits = 1)
filter(fsc, delivery_modality == "In-kind") %>% {sum(.$beneficiaries)} / sum(fsc$beneficiaries) * 100 %>% round()
round(filter(fsc, delivery_modality == "In-kind") %>% {sum(.$beneficiaries)} / sum(fsc$beneficiaries) * 100)
fsc %>%  summarse(beneficiaries = sum(u_ben))
fsc %>%  summarise(beneficiaries = sum(u_ben))
fsc %>% filter(unique_beneficiaries == "Yes") %>% summarise(beneficiaries = sum(beneficiaries))
round(filter(fsc, delivery_modality == "In-kind") %>% {sum(.$u_ben)} / sum(fsc$u_ben) * 100)
round(filter(fsc, delivery_modality == "Cash") %>% {sum(.$u_ben)} / sum(fsc$u_ben) * 100)
round(filter(fsc, delivery_modality == "Cash") %>% {sum(.$beneficiaries)} / sum(fsc$beneficiaries) * 100)
fsc %>% n_distinct(implementing_partners)
fsc %>% select(implementing_partners) %>% distint()
fsc %>% select(implementing_partners) %>% distinct()
fsc %>% select(implementing_partners) %>% distinct() %>%  nrow()
fsc %>% count(hrp_indicator)
fsc %>% filter(str_detect(hrp_indicator, "1.")) %>% nrow(distinct(select(implementing_partners)))
fsc %>% filter(str_detect(hrp_indicator, "1.")) %>% distinct(select(implementing_partners)) %>% nrow()
fsc %>% filter(str_detect(hrp_indicator, "1.")) %>% select(implementing_partners) %>% distinct() %>% nrow()
fsc %>% filter(str_detect(hrp_indicator, "2.")) %>% select(implementing_partners) %>% distinct() %>% nrow()
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
ben %>% sum_ben(implementing_partners) %>% filter(beneficiaries < 10000) %>% nrow()
ben %>% sum_ben(implementing_partners) %>% mean(beneficiaries)
ben %>% sum_ben(implementing_partners) %>% mean(beneficiaries, na.rm = TRUE)
ben %>% sum_ben(implementing_partners) %>% mean()
ben %>% sum_ben(implementing_partners) %>% mean(beneficiaries)
ben %>% sum_ben(implementing_partners) %>% mean(beneficiaries)
ben %>% sum_ben(implementing_partners)
ben %>% sum_ben(implementing_partners) %>% {mean(.$beneficiaries)}
ben %>% sum_ben(implementing_partners) %>% {median(.$beneficiaries)}
ben %>% sum_ben(implementing_partners) %>% {median(.$beneficiaries)} %>% format(big.mark = ",")
ben %>% group_by(implementing_partners) %>% summarise(townships = n_distinct(admin3_pcode))
ben %>% group_by(implementing_partners) %>% summarise(townships = n_distinct(admin3_pcode)) %>% filter(townships > 10) %>% nrow()
ben %>% group_by(implementing_partners) %>% summarise(townships = n_distinct(admin3_pcode)) %>% filter(townships > 5) %>% nrow()
fsc %>% unique(reporting_organization, implementing_partners)
fsc %>% {unique(.$reporting_organization, .$implementing_partners)}
fsc %>% {unique(.$reporting_organization, .$implementing_partners)} %>% distinct()
fsc %>% distinct(reporting_organization, implementing_partners)
fsc %>% distinct(reporting_organization, implementing_partners) %>%  nrow()
fsc %>% distinct(reporting_organization, implementing_partners) %>% filter(reporting_organization == implementing_partners) %>% nrow()
fsc %>% filter(reporting_organization != implementing_partners) %>% distinct(reporting_organization) %>% nrow()
fsc %>%
filter(!is.na(beneficiary_type) & unique_beneficiaries == "Yes") %>%
group_by(state, beneficiary_type) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
pivot_wider(names_from = beneficiary_type, values_from = beneficiaries) %>%
adorn_totals(where = "row", na.rm = TRUE) %>%
adorn_percentages(denominator = "row", na.rm = TRUE)
fsc %>%
filter(!is.na(beneficiary_type) & unique_beneficiaries == "Yes") %>%
group_by(beneficiary_type) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop")
fsc %>%
filter(!is.na(beneficiary_type) & unique_beneficiaries == "Yes") %>%
group_by(beneficiary_type) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
adorn_percentages(denominator = "col", na.rm = TRUE)
fsc %>%
filter(!is.na(beneficiary_type) & unique_beneficiaries == "Yes") %>%
group_by(beneficiary_type) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
adorn_percentages(denominator = "col", na.rm = TRUE) %>%
mutate(beneficiaries = round(beneficiaries * 100))
fsc %>%
filter(!is.na(beneficiary_type) & unique_beneficiaries == "Yes") %>%
group_by(beneficiary_type) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
adorn_percentages(denominator = "col", na.rm = TRUE) %>%
mutate(beneficiaries = round(beneficiaries * 100, digits = 2))
ben_type %>% filter(beneficiary_type == "Host/local Community") %>% pull(beneficiaries)
ben_type <- fsc %>%
filter(!is.na(beneficiary_type) & unique_beneficiaries == "Yes") %>%
group_by(beneficiary_type) %>%
summarise(beneficiaries = sum(beneficiaries), .groups = "drop") %>%
adorn_percentages(denominator = "col", na.rm = TRUE) %>%
mutate(beneficiaries = round(beneficiaries * 100, digits = 2))
ben_type %>% filter(beneficiary_type == "Host/local Community") %>% pull(beneficiaries)
ben_type
# add in target
pin %>%
select(state, township, admin3_pcode, total_pop, PIN_2022 = pin_2022, IDPs = idps) %>%
mutate(total_pop = round(total_pop, digits = 0)) %>%
left_join(fsc %>%
select(activity, partners = implementing_partners, beneficiaries = u_ben, beneficiary_frequencies = beneficiaries,
location, admin3_pcode) %>%
group_by(admin3_pcode) %>%
summarise(partners = n_distinct(partners),
beneficiaries = sum(beneficiaries),
beneficiary_frequencies = sum(beneficiary_frequencies),
locations = n_distinct(location)), by = "admin3_pcode") %>%
replace_na(list(partners = 0, beneficiaries = 0, beneficiary_frequencies = 0, locations = 0)) %>%
relocate(admin3_pcode, .after = IDPs) %>%
arrange(desc(beneficiaries)) %>%
datatable(filter = "top", options = list(pageLength = 10, scrollX = TRUE,
initComplete = htmlwidgets::JS(
"function(settings, json) {",
paste0("$(this.api().table().container()).css({'font-size': '", "8.5pt", "'});"),
"}")
)
)
# I think you need to coalesce the states and townships with pcode3_shape or start with pcode3_shape
tsp_map <- pcode3_shape %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners),
activities = n_distinct(activity)), by = "admin3_pcode") %>%
left_join(pin %>%
select(admin3_pcode, total_pop, idps, pin_2022), by = "admin3_pcode") %>%
replace(is.na(.), 0) %>%
st_as_sf() %>%
ggplot() +
geom_sf(size = 0.1,
aes(fill = pin_2022,
text = paste0(township, ",", "\n",
state, "\n",
"PIN 2022: ", pin_2022, "\n",
"org count: ", partners, "\n",
"act count: ", activities, "\n",
"beneficiaries: ", beneficiaries))) +
scale_fill_viridis_c(option = "turbo", trans = "log10") +
labs(fill = "PIN 2022",
title = "Map of townships by 2022 PIN") +
theme_void() +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 8),
plot.title = element_text(size = 12))
ggplotly(tsp_map, tooltip = c("text")) %>%
layout(showlegend = TRUE, legend = list(font = list(size = 6))) %>%
plotly::style(hoveron = "fill") %>%
layout(title = list(text = paste0("Map of townships by 2022 PIN",
"<br>",
"<sup>",
"mouse over for details; click and drag to select and zoom","</sup>")))
(
fsc %>%
filter(frequency == "Monthly" & beneficiaries > 0) %>%
select(date, implementing_partners, activity, township, location, beneficiaries) %>%
pivot_wider(names_from = date, values_from = beneficiaries) %>%
unnest() %>%
mutate(recurrences = rowSums(!is.na(select(., -implementing_partners, -activity, -township, -location))),
beneficiaries = pmax(`2021-01-01`, `2021-02-01`, `2021-03-01`, `2021-04-01`, `2021-05-01`, `2021-06-01`,
`2021-07-01`, `2021-08-01`, `2021-09-01`, na.rm = TRUE)) %>%
filter(recurrences > 5) %>%
group_by(activity) %>%
summarise(partners = n_distinct(implementing_partners),
locations = n(),
beneficiaries = sum(beneficiaries)) %>%
pander(caption = "Number of unique beneficiaries which have received at least 6 months of recurrent food security support")
fsc %>%
fsc %>%
filter(frequency == "Monthly" & beneficiaries > 0) %>%
select(date, implementing_partners, activity, township, location, beneficiaries) %>%
pivot_wider(names_from = date, values_from = beneficiaries) %>%
unnest() %>%
mutate(recurrences = rowSums(!is.na(select(., -implementing_partners, -activity, -township, -location))),
beneficiaries = pmax(`2021-01-01`, `2021-02-01`, `2021-03-01`, `2021-04-01`, `2021-05-01`, `2021-06-01`,
`2021-07-01`, `2021-08-01`, `2021-09-01`, na.rm = TRUE)) %>%
filter(recurrences > 5) %>%
group_by(activity) %>%
summarise(partners = n_distinct(implementing_partners),
locations = n(),
beneficiaries = sum(beneficiaries)) %>%
pander(caption = "Number of unique beneficiaries which have received at least 6 months of recurrent food security support")
round(has_partner %>% filter(has_partner == FALSE) %>% pull(townships))
has_partner <- pin %>% select(state, admin3_pcode, township, pin_2022) %>%
left_join(ben %>%
group_by(admin3_pcode) %>%
summarise(beneficiaries = sum(beneficiaries),
partners = n_distinct(implementing_partners)), by = "admin3_pcode") %>%
replace(is.na(.), 0) %>%
mutate(has_partner = ifelse(partners == 0, FALSE, TRUE)) %>%
group_by(has_partner) %>%
summarise(pin_2022 = sum(pin_2022),
townships = n()) %>%
adorn_percentages("col") %>%
mutate(pin_2022 = round(pin_2022 * 100, digits = 2),
townships = round(townships * 100, digits = 2))
round(has_partner %>% filter(has_partner == FALSE) %>% pull(townships))
u
round(has_partner %>% filter(has_partner == FALSE) %>% pull(pin_2022))
target_ben_2021
sum(target_ben_2021$beneficiaries) / sum(target_ben_2021$target_2021) * 100
mean(target_ben_2021$pc_reached)
median(target_ben_2021$pc_reached)
